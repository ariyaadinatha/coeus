[
    {
        "name": "ajv",
        "version": "6.10.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
        "aliases": [
            "CVE-2020-15366"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.12.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "async",
        "version": "2.6.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the `mapValues()` method.",
        "aliases": [
            "CVE-2021-43138"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "3.0.0"
                    },
                    {
                        "fixed": "3.2.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "bl",
        "version": "1.0.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "A buffer over-read vulnerability exists in bl <4.0.3, <3.0.1, <2.2.1, and <1.2.3 which could allow an attacker to supply user input (even typed) that if it ends up in consume() argument and can become negative, the BufferList state can be corrupted, tricking it into exposing uninitialized memory via regular .slice() calls.",
        "aliases": [
            "CVE-2020-8244"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.2.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "qs",
        "version": "6.5.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
        "aliases": [
            "CVE-2022-24999"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "6.10.0"
                    },
                    {
                        "fixed": "6.10.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "nconf",
        "version": "0.6.9",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.",
        "aliases": [
            "CVE-2022-21803"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.11.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "bson",
        "version": "1.0.9",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Incorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure.",
        "aliases": [
            "CVE-2019-2391"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.1.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "bson",
        "version": "1.0.9",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "All versions of bson before 1.1.4 are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object's _bsontype, leading to cases where an object is serialized as a document rather than the intended BSON type.",
        "aliases": [
            "CVE-2020-7610"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.1.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "js-yaml",
        "version": "3.6.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `js-yaml` prior to 3.13.0 are vulnerable to Denial of Service. By parsing a carefully-crafted YAML file, the node process stalls and may exhaust system resources leading to a Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 3.13.0.",
        "aliases": null,
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.13.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "1.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
        "aliases": [
            "CVE-2020-7598"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "1.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).",
        "aliases": [
            "CVE-2021-44906"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.0.0"
                    },
                    {
                        "fixed": "1.2.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "request",
        "version": "2.79.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The Request package through 2.88.2 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "aliases": [
            "CVE-2023-28155"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "last_affected": "2.88.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "cryptiles",
        "version": "2.0.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `cryptiles` prior to 4.1.2 are vulnerable to Insufficient Entropy. The `randomDigits()` method does not provide sufficient entropy and its generates digits that are not evenly distributed.\n\n\n## Recommendation\n\nUpgrade to version 4.1.2. The package is deprecated and has been moved to `@hapi/cryptiles` and it is strongly recommended to use the maintained package.",
        "aliases": [
            "CVE-2018-1000620"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.1.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.11",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.",
        "aliases": [
            "CVE-2019-10744"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.12"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.11",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.",
        "aliases": [
            "CVE-2020-8203"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.20"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.11",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(\"time_cost2: \" + time_cost2)",
        "aliases": [
            "CVE-2020-28500"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.21"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.11",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.",
        "aliases": [
            "CVE-2021-23337"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.21"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "1.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
        "aliases": [
            "CVE-2020-7598"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "1.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).",
        "aliases": [
            "CVE-2021-44906"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.0.0"
                    },
                    {
                        "fixed": "1.2.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "moment",
        "version": "2.24.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\nThis vulnerability impacts npm (server) users of moment.js, especially if user provided locale string, eg `fr` is directly used to switch moment locale.\n\n### Patches\nThis problem is patched in 2.29.2, and the patch can be applied to all affected versions (from 1.0.1 up until 2.29.1, inclusive).\n\n### Workarounds\nSanitize user-provided locale name before passing it to moment.js.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [moment repo](https://github.com/moment/moment)\n",
        "aliases": [
            "CVE-2022-24785"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.29.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "moment",
        "version": "2.24.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\n* using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs\n* noticeable slowdown is observed with inputs above 10k characters\n* users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks\n\n### Patches\nThe problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking.\n\n### Workarounds\nIn general, given the proliferation of ReDoS attacks, it makes sense to limit the length of the user input to something sane, like 200 characters or less. I haven't seen legitimate cases of date-time strings longer than that, so all moment users who do pass a user-originating string to constructor are encouraged to apply such a rudimentary filter, that would help with this but also most future ReDoS vulnerabilities.\n\n### References\nThere is an excellent writeup of the issue here: https://github.com/moment/moment/pull/6015#issuecomment-1152961973=\n\n### Details\nThe issue is rooted in the code that removes legacy comments (stuff inside parenthesis) from strings during rfc2822 parsing. `moment(\"(\".repeat(500000))` will take a few minutes to process, which is unacceptable.",
        "aliases": [
            "CVE-2022-31129"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "2.18.0"
                    },
                    {
                        "fixed": "2.29.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "request",
        "version": "2.88.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The Request package through 2.88.2 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "aliases": [
            "CVE-2023-28155"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "last_affected": "2.88.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "decode-uri-component",
        "version": "0.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.",
        "aliases": [
            "CVE-2022-38900"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "dot-prop",
        "version": "4.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Prototype pollution vulnerability in dot-prop npm package versions before 4.2.1 and versions 5.x before 5.1.1 allows an attacker to add arbitrary properties to JavaScript language constructs such as objects.",
        "aliases": [
            "CVE-2020-8116"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "qs",
        "version": "6.5.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
        "aliases": [
            "CVE-2022-24999"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "6.10.0"
                    },
                    {
                        "fixed": "6.10.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "getobject",
        "version": "0.1.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Prototype pollution vulnerability in 'getobject' version 0.1.0 allows an attacker to cause a denial of service and may lead to remote code execution.",
        "aliases": [
            "CVE-2020-28282"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.0.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "async",
        "version": "2.6.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the `mapValues()` method.",
        "aliases": [
            "CVE-2021-43138"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "3.0.0"
                    },
                    {
                        "fixed": "3.2.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "glob-parent",
        "version": "3.1.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.",
        "aliases": [
            "CVE-2020-28469"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "5.1.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "got",
        "version": "6.7.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The got package before 11.8.5 and 12.1.0 for Node.js allows a redirect to a UNIX socket.",
        "aliases": [
            "CVE-2022-33987"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "12.0.0"
                    },
                    {
                        "fixed": "12.1.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "growl",
        "version": "1.9.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `growl` do not properly sanitize input prior to passing it into a shell command, allowing for arbitrary command execution.\n\n\n## Recommendation\n\nUpdate to version 1.10.0 or later.",
        "aliases": [
            "CVE-2017-16042"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.10.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "grunt",
        "version": "1.0.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The package grunt before 1.3.0 are vulnerable to Arbitrary Code Execution due to the default usage of the function load() instead of its secure replacement safeLoad() of the package js-yaml inside grunt.file.readYAML.",
        "aliases": [
            "CVE-2020-7729"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.3.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "grunt",
        "version": "1.0.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Grunt prior to version 1.5.2 is vulnerable to path traversal.",
        "aliases": [
            "CVE-2022-0436"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.5.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "grunt",
        "version": "1.0.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "file.copy operations in GruntJS are vulnerable to a TOCTOU race condition leading to arbitrary file write in GitHub repository gruntjs/grunt prior to 1.5.3. This vulnerability is capable of arbitrary file writes which can lead to local privilege escalation to the GruntJS user if a lower-privileged user has write access to both source and destination directories as the lower-privileged user can create a symlink to the GruntJS user's .bashrc file or replace /etc/shadow file if the GruntJS user is root.",
        "aliases": [
            "CVE-2022-1537"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.5.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "hawk",
        "version": "3.1.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker's input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead.`Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`.",
        "aliases": [
            "CVE-2022-29167"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "9.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "helmet-csp",
        "version": "1.2.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `helmet-csp` before to 2.9.1 are vulnerable to a Configuration Override affecting the application's Content Security Policy (CSP). The package's browser sniffing for Firefox deletes the `default-src` CSP policy, which is the fallback policy. This allows an attacker to remove an application's default CSP, possibly rendering the application vulnerable to Cross-Site Scripting.\n\n\n## Recommendation\n\nUpgrade to version 2.9.1 or later. Setting the `browserSniff` configuration to `false` in vulnerable versions also mitigates the issue.",
        "aliases": null,
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.2.2"
                    },
                    {
                        "fixed": "2.9.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "helmet-csp",
        "version": "1.2.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `helmet-csp` before to 2.9.1 are vulnerable to a Configuration Override affecting the application's Content Security Policy (CSP). The package's browser sniffing for Firefox deletes the `default-src` CSP policy, which is the fallback policy. This allows an attacker to remove an application's default CSP, possibly rendering the application vulnerable to Cross-Site Scripting.\n\n\n## Recommendation\n\nUpgrade to version 2.9.1 or later. Setting the `browserSniff` configuration to `false` in vulnerable versions also mitigates the issue.",
        "aliases": null,
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.2.2"
                    },
                    {
                        "fixed": "2.9.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "hosted-git-info",
        "version": "2.7.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity",
        "aliases": [
            "CVE-2021-23362"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.8.9"
                    }
                ]
            }
        ]
    },
    {
        "name": "i",
        "version": "0.3.6",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "inflect is customizable inflections for nodejs. inflect is vulnerable to Inefficient Regular Expression Complexity",
        "aliases": [
            "CVE-2021-3820"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.3.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "ini",
        "version": "1.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Overview\nThe `ini` npm package before version 1.3.6 has a Prototype Pollution vulnerability.\n\nIf an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.\n\n### Patches\n\nThis has been patched in 1.3.6.\n\n### Steps to reproduce\n\npayload.ini\n```\n[__proto__]\npolluted = \"polluted\"\n```\n\npoc.js:\n```\nvar fs = require('fs')\nvar ini = require('ini')\n\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\nconsole.log(parsed)\nconsole.log(parsed.__proto__)\nconsole.log(polluted)\n```\n\n```\n> node poc.js\n{}\n{ polluted: 'polluted' }\n{ polluted: 'polluted' }\npolluted\n```",
        "aliases": [
            "CVE-2020-7788"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.3.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "js-yaml",
        "version": "3.5.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `js-yaml` prior to 3.13.0 are vulnerable to Denial of Service. By parsing a carefully-crafted YAML file, the node process stalls and may exhaust system resources leading to a Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 3.13.0.",
        "aliases": null,
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.13.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "json-schema",
        "version": "0.2.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "json-schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').",
        "aliases": [
            "CVE-2021-3918"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.4.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "jsonpointer",
        "version": "4.0.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "This affects the package `jsonpointer` before `5.0.0`. A type confusion vulnerability can lead to a bypass of a previous Prototype Pollution fix when the pointer components are arrays.",
        "aliases": [
            "CVE-2021-23807"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "5.0.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "json-schema",
        "version": "0.2.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "json-schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').",
        "aliases": [
            "CVE-2021-3918"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.4.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.11",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.",
        "aliases": [
            "CVE-2019-10744"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.12"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.11",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.",
        "aliases": [
            "CVE-2020-8203"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.20"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.11",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(\"time_cost2: \" + time_cost2)",
        "aliases": [
            "CVE-2020-28500"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.21"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.11",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.",
        "aliases": [
            "CVE-2021-23337"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.21"
                    }
                ]
            }
        ]
    },
    {
        "name": "marked",
        "version": "0.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "marked version 0.3.6 and earlier is vulnerable to an XSS attack in the data: URI parser.",
        "aliases": [
            "CVE-2017-1000427"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.3.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "marked",
        "version": "0.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\n_What kind of vulnerability is it?_\n\nDenial of service.\n\nThe regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings.\nPoC is the following.\n\n```javascript\nimport * as marked from 'marked';\n\nconsole.log(marked.parse(`[x]: x\n\n\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](`));\n```\n\n_Who is impacted?_\n\nAnyone who runs untrusted markdown through marked and does not use a worker with a time limit.\n\n### Patches\n\n_Has the problem been patched?_\n\nYes\n\n_What versions should users upgrade to?_\n\n4.0.10\n\n### Workarounds\n\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nDo not run untrusted markdown through marked or run marked on a [worker](https://marked.js.org/using_advanced#workers) thread and set a reasonable time limit to prevent draining resources.\n\n### References\n\n_Are there any links users can visit to find out more?_\n\n- https://marked.js.org/using_advanced#workers\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [marked](https://github.com/markedjs/marked)\n",
        "aliases": [
            "CVE-2022-21681"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.0.10"
                    }
                ]
            }
        ]
    },
    {
        "name": "marked",
        "version": "0.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\n_What kind of vulnerability is it?_\n\nDenial of service.\n\nThe regular expression `block.def` may cause catastrophic backtracking against some strings.\nPoC is the following.\n\n```javascript\nimport * as marked from \"marked\";\n\nmarked.parse(`[x]:${' '.repeat(1500)}x ${' '.repeat(1500)} x`);\n```\n\n_Who is impacted?_\n\nAnyone who runs untrusted markdown through marked and does not use a worker with a time limit.\n\n### Patches\n\n_Has the problem been patched?_\n\nYes\n\n_What versions should users upgrade to?_\n\n4.0.10\n\n### Workarounds\n\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nDo not run untrusted markdown through marked or run marked on a [worker](https://marked.js.org/using_advanced#workers) thread and set a reasonable time limit to prevent draining resources.\n\n### References\n\n_Are there any links users can visit to find out more?_\n\n- https://marked.js.org/using_advanced#workers\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [marked](https://github.com/markedjs/marked)\n",
        "aliases": [
            "CVE-2022-21680"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.0.10"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimatch",
        "version": "3.0.4",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
        "aliases": [
            "CVE-2022-3517"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.0.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "0.0.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
        "aliases": [
            "CVE-2020-7598"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "0.0.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).",
        "aliases": [
            "CVE-2021-44906"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.0.0"
                    },
                    {
                        "fixed": "1.2.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "mixin-deep",
        "version": "1.3.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `mixin-deep` prior to 2.0.1 or 1.3.2 are vulnerable to Prototype Pollution. The `mixinDeep` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `mixin-deep` 2.x, upgrade to version 2.0.1 or later.\nIf you are using `mixin-deep` 1.x, upgrade to version 1.3.2 or later.",
        "aliases": [
            "CVE-2019-10746"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.3.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "0.0.8",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
        "aliases": [
            "CVE-2020-7598"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "0.0.8",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).",
        "aliases": [
            "CVE-2021-44906"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.0.0"
                    },
                    {
                        "fixed": "1.2.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "debug",
        "version": "2.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "A vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The name of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability. The patch has been backported to the 2.6.x branch in version 2.6.9.",
        "aliases": [
            "CVE-2017-20165"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "3.0.0"
                    },
                    {
                        "fixed": "3.1.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "growl",
        "version": "1.9.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `growl` do not properly sanitize input prior to passing it into a shell command, allowing for arbitrary command execution.\n\n\n## Recommendation\n\nUpdate to version 1.10.0 or later.",
        "aliases": [
            "CVE-2017-16042"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.10.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "moment",
        "version": "2.24.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\nThis vulnerability impacts npm (server) users of moment.js, especially if user provided locale string, eg `fr` is directly used to switch moment locale.\n\n### Patches\nThis problem is patched in 2.29.2, and the patch can be applied to all affected versions (from 1.0.1 up until 2.29.1, inclusive).\n\n### Workarounds\nSanitize user-provided locale name before passing it to moment.js.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [moment repo](https://github.com/moment/moment)\n",
        "aliases": [
            "CVE-2022-24785"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.29.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "moment",
        "version": "2.24.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\n* using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs\n* noticeable slowdown is observed with inputs above 10k characters\n* users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks\n\n### Patches\nThe problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking.\n\n### Workarounds\nIn general, given the proliferation of ReDoS attacks, it makes sense to limit the length of the user input to something sane, like 200 characters or less. I haven't seen legitimate cases of date-time strings longer than that, so all moment users who do pass a user-originating string to constructor are encouraged to apply such a rudimentary filter, that would help with this but also most future ReDoS vulnerabilities.\n\n### References\nThere is an excellent writeup of the issue here: https://github.com/moment/moment/pull/6015#issuecomment-1152961973=\n\n### Details\nThe issue is rooted in the code that removes legacy comments (stuff inside parenthesis) from strings during rfc2822 parsing. `moment(\"(\".repeat(500000))` will take a few minutes to process, which is unacceptable.",
        "aliases": [
            "CVE-2022-31129"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "2.18.0"
                    },
                    {
                        "fixed": "2.29.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "nconf",
        "version": "0.10.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.",
        "aliases": [
            "CVE-2022-21803"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.11.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "An issue was discovered in an npm 5.7.0 2018-02-21 pre-release (marked as \"next: 5.7.0\" and therefore automatically installed by an \"npm upgrade -g npm\" command, and also announced in the vendor's blog without mention of pre-release status). It might allow local users to bypass intended filesystem access restrictions because ownerships of /etc and /usr directories are being changed unexpectedly, related to a \"correctMkdir\" issue.",
        "aliases": [
            "CVE-2018-7408"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "5.7.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended node_modules folder through the bin field. A properly constructed entry in the package.json bin field would allow a package publisher to create files on a user's system when the package is installed. It is only possible to affect files that the user running `npm install` has access to and it is not possible to over write files that already exist on disk.\n\nThis behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.\n\n\n## Recommendation\n\nUpgrade to version 6.13.3 or later.",
        "aliases": [
            "CVE-2019-16775"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.13.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of the npm CLI prior to 6.13.3 are vulnerable to a symlink reference outside of node_modules. It is possible for packages to create symlinks to files outside of the`node_modules` folder through the `bin` field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user\u2019s system when the package is installed. Only files accessible by the user running the `npm install` are affected.  \n\nThis behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.\n\n\n## Recommendation\n\nUpgrade to version 6.13.3 or later.",
        "aliases": [
            "CVE-2019-16776"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.13.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of  the npm CLI prior to 6.13.4 are vulnerable to a Global node_modules Binary Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations. \n\nFor example, if a package was installed globally and created a `serve` binary, any subsequent installs of packages that also create a `serve` binary would overwrite the first binary. This will not overwrite system binaries but only binaries put into the global node_modules directory.\n\nThis behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.\n\n\n## Recommendation\n\nUpgrade to version 6.13.4 or later.",
        "aliases": [
            "CVE-2019-16777"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.13.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of the npm CLI prior to 6.14.6 are vulnerable to an information exposure vulnerability through log files. The CLI supports URLs like `<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>`. The password value is not redacted and is printed to stdout and also to any generated log files.",
        "aliases": [
            "CVE-2020-15095"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:H/I:N/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.14.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "qs",
        "version": "6.5.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
        "aliases": [
            "CVE-2022-24999"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "6.10.0"
                    },
                    {
                        "fixed": "6.10.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "request",
        "version": "2.79.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The Request package through 2.88.2 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "aliases": [
            "CVE-2023-28155"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "last_affected": "2.88.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "xml2js",
        "version": "0.4.4",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "xml2js versions before 0.5.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the `__proto__` property to be edited.",
        "aliases": [
            "CVE-2023-0842"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.5.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "set-value",
        "version": "2.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `set-value` prior to 3.0.1 or 2.0.1 are vulnerable to Prototype Pollution. The `set` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `set-value` 3.x, upgrade to version 3.0.1 or later.\nIf you are using `set-value` 2.x, upgrade to version 2.0.1 or later.",
        "aliases": [
            "CVE-2019-10747"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "set-value",
        "version": "2.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "This affects the package `set-value` before 2.0.1, and starting with 3.0.0 but prior to 4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
        "aliases": [
            "CVE-2021-23440"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "3.0.0"
                    },
                    {
                        "fixed": "4.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "shelljs",
        "version": "0.3.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "shelljs is vulnerable to Improper Privilege Management",
        "aliases": [
            "CVE-2022-0144"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.8.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "swig",
        "version": "1.4.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Directory traversal vulnerability in swig-templates thru 2.0.4 and swig thru 1.4.2, allows attackers to read arbitrary files via the include or extends tags.",
        "aliases": [
            "CVE-2023-25345"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "last_affected": "2.0.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "trim-newlines",
        "version": "1.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "@rkesters/gnuplot is an easy to use node module to draw charts using gnuplot and ps2pdf. The trim-newlines package before 3.0.1 and 4.x before 4.0.1 for Node.js has an issue related to regular expression denial-of-service (ReDoS) for the .end() method.",
        "aliases": [
            "CVE-2021-33623"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "uglify-js",
        "version": "2.4.24",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `uglify-js` prior to 2.6.0 are affected by a regular expression denial of service vulnerability when malicious inputs are passed into the `parse()` method.\n\n\n### Proof of Concept\n\n```\nvar u = require('uglify-js');\nvar genstr = function (len, chr) {\n    var result = \"\";\n    for (i=0; i<=len; i++) {\n        result = result + chr;\n    }\n\n    return result;\n}\n\nu.parse(\"var a = \" + genstr(process.argv[2], \"1\") + \".1ee7;\");\n```\n\n### Results\n```\n$ time node test.js 10000\nreal\t0m1.091s\nuser\t0m1.047s\nsys\t0m0.039s\n\n$ time node test.js 80000\nreal\t0m6.486s\nuser\t0m6.229s\nsys\t0m0.094s\n```\n\n\n## Recommendation\n\nUpdate to version 2.6.0 or later.",
        "aliases": [
            "CVE-2015-8858"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.6.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "undefsafe",
        "version": "2.0.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "undefsafe before 2.0.3 is vulnerable to Prototype Pollution. The 'a' function could be tricked into adding or modifying properties of Object.prototype using a `__proto__` payload.",
        "aliases": [
            "CVE-2019-10795"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.0.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "underscore",
        "version": "1.9.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The package `underscore` from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Execution via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",
        "aliases": [
            "CVE-2021-23358"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.3.2"
                    },
                    {
                        "fixed": "1.12.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "websocket-extensions",
        "version": "0.1.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\nThe ReDoS flaw allows an attacker to exhaust the server's capacity to process\nincoming requests by sending a WebSocket handshake request containing a header\nof the following form:\n\n    Sec-WebSocket-Extensions: a; b=\"\\c\\c\\c\\c\\c\\c\\c\\c\\c\\c ...\n\nThat is, a header containing an unclosed string parameter value whose content is\na repeating two-byte sequence of a backslash and some other character. The\nparser takes exponential time to reject this header as invalid, and this will\nblock the processing of any other work on the same thread. Thus if you are\nrunning a single-threaded server, such a request can render your service\ncompletely unavailable.\n\n### Patches\n\nUsers should upgrade to version 0.1.4.\n\n### Workarounds\n\nThere are no known work-arounds other than disabling any public-facing\nWebSocket functionality you are operating.\n\n### References\n\n- https://blog.jcoglan.com/2020/06/02/redos-vulnerability-in-websocket-extensions/",
        "aliases": [
            "CVE-2020-7662"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.1.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "xml2js",
        "version": "0.4.4",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "xml2js versions before 0.5.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the `__proto__` property to be edited.",
        "aliases": [
            "CVE-2023-0842"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.5.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "y18n",
        "version": "3.2.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Overview\n\nThe npm package `y18n` before versions 3.2.2, 4.0.1, and 5.0.5 is vulnerable to Prototype Pollution. \n\n### POC\n\n```\nconst y18n = require('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({polluted: true});\n\nconsole.log(polluted); // true\n```\n\n### Recommendation\n\nUpgrade to version 3.2.2, 4.0.1, 5.0.5 or later.",
        "aliases": [
            "CVE-2020-7774"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.2.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "ajv",
        "version": "6.10.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
        "aliases": [
            "CVE-2020-15366"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.12.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "ansi-regex",
        "version": "3.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.",
        "aliases": [
            "CVE-2021-3807"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "6.0.0"
                    },
                    {
                        "fixed": "6.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "kind-of",
        "version": "6.0.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `kind-of` 6.x prior to 6.0.3 are vulnerable to a Validation Bypass. A maliciously crafted object can alter the result of the type check, allowing attackers to bypass the type checking validation. \n\n\n## Recommendation\n\nUpgrade to versions 6.0.3 or later.",
        "aliases": [
            "CVE-2019-20149"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "6.0.0"
                    },
                    {
                        "fixed": "6.0.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "bl",
        "version": "1.1.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "A buffer over-read vulnerability exists in bl <4.0.3, <3.0.1, <2.2.1, and <1.2.3 which could allow an attacker to supply user input (even typed) that if it ends up in consume() argument and can become negative, the BufferList state can be corrupted, tricking it into exposing uninitialized memory via regular .slice() calls.",
        "aliases": [
            "CVE-2020-8244"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.2.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "brace-expansion",
        "version": "1.1.6",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `brace-expansion` are vulnerable to a regular expression denial of service condition.\n\n## Proof of Concept\n\n```\nvar expand = require('brace-expansion');\nexpand('{,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\\n}');\n```\n\n\n## Recommendation\n\nUpdate to version 1.1.7 or later.",
        "aliases": [
            "CVE-2017-18077"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.1.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "braces",
        "version": "1.8.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `braces` prior to 2.3.1 are vulnerable to Regular Expression Denial of Service (ReDoS). Untrusted input may cause catastrophic backtracking while matching regular expressions. This can cause the application to be unresponsive leading to Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 2.3.1 or higher.",
        "aliases": null,
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.3.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "nconf",
        "version": "0.10.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.",
        "aliases": [
            "CVE-2022-21803"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.11.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "bson",
        "version": "1.0.9",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Incorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure.",
        "aliases": [
            "CVE-2019-2391"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.1.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "bson",
        "version": "1.0.9",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "All versions of bson before 1.1.4 are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object's _bsontype, leading to cases where an object is serialized as a document rather than the intended BSON type.",
        "aliases": [
            "CVE-2020-7610"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.1.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "js-yaml",
        "version": "3.5.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `js-yaml` prior to 3.13.0 are vulnerable to Denial of Service. By parsing a carefully-crafted YAML file, the node process stalls and may exhaust system resources leading to a Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 3.13.0.",
        "aliases": null,
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.13.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "1.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
        "aliases": [
            "CVE-2020-7598"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "1.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).",
        "aliases": [
            "CVE-2021-44906"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.0.0"
                    },
                    {
                        "fixed": "1.2.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "cryptiles",
        "version": "0.2.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `cryptiles` prior to 4.1.2 are vulnerable to Insufficient Entropy. The `randomDigits()` method does not provide sufficient entropy and its generates digits that are not evenly distributed.\n\n\n## Recommendation\n\nUpgrade to version 4.1.2. The package is deprecated and has been moved to `@hapi/cryptiles` and it is strongly recommended to use the maintained package.",
        "aliases": [
            "CVE-2018-1000620"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.1.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "request",
        "version": "2.36.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The Request package through 2.88.2 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "aliases": [
            "CVE-2023-28155"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "last_affected": "2.88.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "decode-uri-component",
        "version": "0.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.",
        "aliases": [
            "CVE-2022-38900"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "dot-prop",
        "version": "4.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Prototype pollution vulnerability in dot-prop npm package versions before 4.2.1 and versions 5.x before 5.1.1 allows an attacker to add arbitrary properties to JavaScript language constructs such as objects.",
        "aliases": [
            "CVE-2020-8116"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "chownr",
        "version": "1.0.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "A TOCTOU issue in the chownr package before 1.1.0 for Node.js 10.10 could allow a local attacker to trick it into descending into unintended directories via symlink attacks.",
        "aliases": [
            "CVE-2017-18869"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.1.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "ini",
        "version": "1.3.4",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Overview\nThe `ini` npm package before version 1.3.6 has a Prototype Pollution vulnerability.\n\nIf an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.\n\n### Patches\n\nThis has been patched in 1.3.6.\n\n### Steps to reproduce\n\npayload.ini\n```\n[__proto__]\npolluted = \"polluted\"\n```\n\npoc.js:\n```\nvar fs = require('fs')\nvar ini = require('ini')\n\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\nconsole.log(parsed)\nconsole.log(parsed.__proto__)\nconsole.log(polluted)\n```\n\n```\n> node poc.js\n{}\n{ polluted: 'polluted' }\n{ polluted: 'polluted' }\npolluted\n```",
        "aliases": [
            "CVE-2020-7788"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.3.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimatch",
        "version": "3.0.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
        "aliases": [
            "CVE-2022-3517"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.0.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "tar",
        "version": "2.2.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `tar` prior to 4.4.2 for 4.x and 2.2.2 for 2.x are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system, and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file.\n\n\n## Recommendation\n\nFor tar 4.x, upgrade to version 4.4.2 or later.\nFor tar 2.x, upgrade to version 2.2.2 or later.",
        "aliases": [
            "CVE-2018-20834"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "3.0.0"
                    },
                    {
                        "fixed": "4.4.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "tar",
        "version": "2.2.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. \n\nThis logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. \n\n### Patches\n\n3.2.2 || 4.4.14 || 5.0.6 || 6.1.1\n\nNOTE: an adjacent issue [CVE-2021-32803](https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw) affects this release level. Please ensure you update to the latest patch levels that address CVE-2021-32803 as well if this adjacent issue affects your `node-tar` use case.\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths.\n\n```js\nconst path = require('path')\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  // either add this function...\n  onentry: (entry) => {\n    if (path.isAbsolute(entry.path)) {\n      entry.path = sanitizeAbsolutePathSomehow(entry.path)\n      entry.absolute = path.resolve(entry.path)\n    }\n  },\n\n  // or this one\n  filter: (file, entry) => {\n    if (path.isAbsolute(entry.path)) {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.",
        "aliases": [
            "CVE-2021-32804"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.2.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "tar",
        "version": "2.2.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThis issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.\n\n### Patches\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `filter` method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.",
        "aliases": [
            "CVE-2021-32803"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.2.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "tar",
        "version": "2.2.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nAdditionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. \n\nThese issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n### Fix\n\nThe problem is addressed in the following ways:\n\n1. All paths are normalized to use `/` as a path separator, replacing `\\` with `/` on Windows systems, and leaving `\\` intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed.\n2. Directory cache pruning is performed case-insensitively.  This _may_ result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.\n\n#### Caveat\n\nNote that this means that the `entry` objects exposed in various parts of tar's API will now always use `/` as a path separator, even on Windows systems.  This is not expected to cause problems, as `/` is a valid path separator on Windows systems, but _may_ result in issues if `entry.path` is compared against a path string coming from some other API such as `fs.realpath()` or `path.resolve()`.\n\nUsers are encouraged to always normalize paths using a well-tested method such as `path.resolve()` before comparing paths to one another.",
        "aliases": [
            "CVE-2021-37701"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.4.16"
                    }
                ]
            }
        ]
    },
    {
        "name": "tar",
        "version": "2.2.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.  If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.\n",
        "aliases": [
            "CVE-2021-37713"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.4.18"
                    }
                ]
            }
        ]
    },
    {
        "name": "tar",
        "version": "2.2.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n#### Fix\n\nThe problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:\n\n1. The `String.normalize('NFKD')` method is used to first normalize all unicode to its maximally compatible and multi-code-point form.\n2. All slashes are normalized to `/` on Windows systems (on posix systems, `\\` is a valid filename character, and thus left intact).\n3. When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.\n",
        "aliases": [
            "CVE-2021-37712"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.4.18"
                    }
                ]
            }
        ]
    },
    {
        "name": "getobject",
        "version": "0.1.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Prototype pollution vulnerability in 'getobject' version 0.1.0 allows an attacker to cause a denial of service and may lead to remote code execution.",
        "aliases": [
            "CVE-2020-28282"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.0.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "glob-parent",
        "version": "2.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.",
        "aliases": [
            "CVE-2020-28469"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "5.1.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "got",
        "version": "6.7.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The got package before 11.8.5 and 12.1.0 for Node.js allows a redirect to a UNIX socket.",
        "aliases": [
            "CVE-2022-33987"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "12.0.0"
                    },
                    {
                        "fixed": "12.1.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "growl",
        "version": "1.9.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `growl` do not properly sanitize input prior to passing it into a shell command, allowing for arbitrary command execution.\n\n\n## Recommendation\n\nUpdate to version 1.10.0 or later.",
        "aliases": [
            "CVE-2017-16042"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.10.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "grunt",
        "version": "1.0.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The package grunt before 1.3.0 are vulnerable to Arbitrary Code Execution due to the default usage of the function load() instead of its secure replacement safeLoad() of the package js-yaml inside grunt.file.readYAML.",
        "aliases": [
            "CVE-2020-7729"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.3.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "grunt",
        "version": "1.0.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Grunt prior to version 1.5.2 is vulnerable to path traversal.",
        "aliases": [
            "CVE-2022-0436"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.5.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "grunt",
        "version": "1.0.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "file.copy operations in GruntJS are vulnerable to a TOCTOU race condition leading to arbitrary file write in GitHub repository gruntjs/grunt prior to 1.5.3. This vulnerability is capable of arbitrary file writes which can lead to local privilege escalation to the GruntJS user if a lower-privileged user has write access to both source and destination directories as the lower-privileged user can create a symlink to the GruntJS user's .bashrc file or replace /etc/shadow file if the GruntJS user is root.",
        "aliases": [
            "CVE-2022-1537"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.5.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "2.4.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.",
        "aliases": [
            "CVE-2019-10744"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.12"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "2.4.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.",
        "aliases": [
            "CVE-2020-8203"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.20"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "2.4.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(\"time_cost2: \" + time_cost2)",
        "aliases": [
            "CVE-2020-28500"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.21"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "2.4.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.",
        "aliases": [
            "CVE-2021-23337"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.21"
                    }
                ]
            }
        ]
    },
    {
        "name": "qs",
        "version": "0.6.6",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected version of `qs` are vulnerable to Prototype Pollution because it is possible to bypass the protection. The `qs.parse` function fails to properly prevent an object's prototype to be altered when parsing arbitrary input. Input containing `[` or `]` may bypass the prototype pollution protection and alter the Object prototype. This allows attackers to override properties that will exist in all objects, which may lead to Denial of Service or Remote Code Execution in specific circumstances.\n\n\n## Recommendation\n\nUpgrade to 6.0.4, 6.1.2, 6.2.3, 6.3.2 or later.",
        "aliases": [
            "CVE-2017-1000048"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.0.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "qs",
        "version": "0.6.6",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
        "aliases": [
            "CVE-2022-24999"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "6.10.0"
                    },
                    {
                        "fixed": "6.10.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "hawk",
        "version": "1.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `hawk` prior to 3.1.3, or 4.x prior to 4.1.1 are affected by a regular expression denial of service vulnerability related to excessively long headers and URI's.\n\n\n\n## Recommendation\n\nUpdate to hawk version 4.1.1 or later.",
        "aliases": [
            "CVE-2016-2515"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "4.0.0"
                    },
                    {
                        "fixed": "4.1.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "hawk",
        "version": "1.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker's input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead.`Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`.",
        "aliases": [
            "CVE-2022-29167"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "9.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "helmet-csp",
        "version": "1.2.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `helmet-csp` before to 2.9.1 are vulnerable to a Configuration Override affecting the application's Content Security Policy (CSP). The package's browser sniffing for Firefox deletes the `default-src` CSP policy, which is the fallback policy. This allows an attacker to remove an application's default CSP, possibly rendering the application vulnerable to Cross-Site Scripting.\n\n\n## Recommendation\n\nUpgrade to version 2.9.1 or later. Setting the `browserSniff` configuration to `false` in vulnerable versions also mitigates the issue.",
        "aliases": null,
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.2.2"
                    },
                    {
                        "fixed": "2.9.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "hosted-git-info",
        "version": "2.1.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity",
        "aliases": [
            "CVE-2021-23362"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.8.9"
                    }
                ]
            }
        ]
    },
    {
        "name": "i",
        "version": "0.3.6",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "inflect is customizable inflections for nodejs. inflect is vulnerable to Inefficient Regular Expression Complexity",
        "aliases": [
            "CVE-2021-3820"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.3.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "is-my-json-valid",
        "version": "2.15.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "It was discovered that the is-my-json-valid JavaScript library used an inefficient regular expression to validate JSON fields defined to have email format. A specially crafted JSON file could cause it to consume an excessive amount of CPU time when validated.",
        "aliases": [
            "CVE-2018-1107"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "2.0.0"
                    },
                    {
                        "fixed": "2.17.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "is-my-json-valid",
        "version": "2.15.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Version of `is-my-json-valid` before 1.4.1 or 2.17.2 are vulnerable to regular expression denial of service (ReDoS) via the email validation function.\n\n\n## Recommendation\n\nUpdate to version 1.4.1, 2.17.2 or later.",
        "aliases": [
            "CVE-2016-2537"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "2.0.0"
                    },
                    {
                        "fixed": "2.17.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "json-schema",
        "version": "0.2.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "json-schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').",
        "aliases": [
            "CVE-2021-3918"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.4.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "jsonpointer",
        "version": "4.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "This affects the package `jsonpointer` before `5.0.0`. A type confusion vulnerability can lead to a bypass of a previous Prototype Pollution fix when the pointer components are arrays.",
        "aliases": [
            "CVE-2021-23807"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "5.0.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "marked",
        "version": "0.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "marked version 0.3.6 and earlier is vulnerable to an XSS attack in the data: URI parser.",
        "aliases": [
            "CVE-2017-1000427"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.3.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "marked",
        "version": "0.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\n_What kind of vulnerability is it?_\n\nDenial of service.\n\nThe regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings.\nPoC is the following.\n\n```javascript\nimport * as marked from 'marked';\n\nconsole.log(marked.parse(`[x]: x\n\n\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](`));\n```\n\n_Who is impacted?_\n\nAnyone who runs untrusted markdown through marked and does not use a worker with a time limit.\n\n### Patches\n\n_Has the problem been patched?_\n\nYes\n\n_What versions should users upgrade to?_\n\n4.0.10\n\n### Workarounds\n\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nDo not run untrusted markdown through marked or run marked on a [worker](https://marked.js.org/using_advanced#workers) thread and set a reasonable time limit to prevent draining resources.\n\n### References\n\n_Are there any links users can visit to find out more?_\n\n- https://marked.js.org/using_advanced#workers\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [marked](https://github.com/markedjs/marked)\n",
        "aliases": [
            "CVE-2022-21681"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.0.10"
                    }
                ]
            }
        ]
    },
    {
        "name": "marked",
        "version": "0.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\n_What kind of vulnerability is it?_\n\nDenial of service.\n\nThe regular expression `block.def` may cause catastrophic backtracking against some strings.\nPoC is the following.\n\n```javascript\nimport * as marked from \"marked\";\n\nmarked.parse(`[x]:${' '.repeat(1500)}x ${' '.repeat(1500)} x`);\n```\n\n_Who is impacted?_\n\nAnyone who runs untrusted markdown through marked and does not use a worker with a time limit.\n\n### Patches\n\n_Has the problem been patched?_\n\nYes\n\n_What versions should users upgrade to?_\n\n4.0.10\n\n### Workarounds\n\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nDo not run untrusted markdown through marked or run marked on a [worker](https://marked.js.org/using_advanced#workers) thread and set a reasonable time limit to prevent draining resources.\n\n### References\n\n_Are there any links users can visit to find out more?_\n\n- https://marked.js.org/using_advanced#workers\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [marked](https://github.com/markedjs/marked)\n",
        "aliases": [
            "CVE-2022-21680"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.0.10"
                    }
                ]
            }
        ]
    },
    {
        "name": "mixin-deep",
        "version": "1.3.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `mixin-deep` prior to 2.0.1 or 1.3.2 are vulnerable to Prototype Pollution. The `mixinDeep` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `mixin-deep` 2.x, upgrade to version 2.0.1 or later.\nIf you are using `mixin-deep` 1.x, upgrade to version 1.3.2 or later.",
        "aliases": [
            "CVE-2019-10746"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.3.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "moment",
        "version": "2.24.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\nThis vulnerability impacts npm (server) users of moment.js, especially if user provided locale string, eg `fr` is directly used to switch moment locale.\n\n### Patches\nThis problem is patched in 2.29.2, and the patch can be applied to all affected versions (from 1.0.1 up until 2.29.1, inclusive).\n\n### Workarounds\nSanitize user-provided locale name before passing it to moment.js.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [moment repo](https://github.com/moment/moment)\n",
        "aliases": [
            "CVE-2022-24785"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.29.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "moment",
        "version": "2.24.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\n* using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs\n* noticeable slowdown is observed with inputs above 10k characters\n* users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks\n\n### Patches\nThe problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking.\n\n### Workarounds\nIn general, given the proliferation of ReDoS attacks, it makes sense to limit the length of the user input to something sane, like 200 characters or less. I haven't seen legitimate cases of date-time strings longer than that, so all moment users who do pass a user-originating string to constructor are encouraged to apply such a rudimentary filter, that would help with this but also most future ReDoS vulnerabilities.\n\n### References\nThere is an excellent writeup of the issue here: https://github.com/moment/moment/pull/6015#issuecomment-1152961973=\n\n### Details\nThe issue is rooted in the code that removes legacy comments (stuff inside parenthesis) from strings during rfc2822 parsing. `moment(\"(\".repeat(500000))` will take a few minutes to process, which is unacceptable.",
        "aliases": [
            "CVE-2022-31129"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "2.18.0"
                    },
                    {
                        "fixed": "2.29.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "An issue was discovered in an npm 5.7.0 2018-02-21 pre-release (marked as \"next: 5.7.0\" and therefore automatically installed by an \"npm upgrade -g npm\" command, and also announced in the vendor's blog without mention of pre-release status). It might allow local users to bypass intended filesystem access restrictions because ownerships of /etc and /usr directories are being changed unexpectedly, related to a \"correctMkdir\" issue.",
        "aliases": [
            "CVE-2018-7408"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "5.7.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended node_modules folder through the bin field. A properly constructed entry in the package.json bin field would allow a package publisher to create files on a user's system when the package is installed. It is only possible to affect files that the user running `npm install` has access to and it is not possible to over write files that already exist on disk.\n\nThis behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.\n\n\n## Recommendation\n\nUpgrade to version 6.13.3 or later.",
        "aliases": [
            "CVE-2019-16775"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.13.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of the npm CLI prior to 6.13.3 are vulnerable to a symlink reference outside of node_modules. It is possible for packages to create symlinks to files outside of the`node_modules` folder through the `bin` field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user\u2019s system when the package is installed. Only files accessible by the user running the `npm install` are affected.  \n\nThis behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.\n\n\n## Recommendation\n\nUpgrade to version 6.13.3 or later.",
        "aliases": [
            "CVE-2019-16776"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.13.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of  the npm CLI prior to 6.13.4 are vulnerable to a Global node_modules Binary Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations. \n\nFor example, if a package was installed globally and created a `serve` binary, any subsequent installs of packages that also create a `serve` binary would overwrite the first binary. This will not overwrite system binaries but only binaries put into the global node_modules directory.\n\nThis behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.\n\n\n## Recommendation\n\nUpgrade to version 6.13.4 or later.",
        "aliases": [
            "CVE-2019-16777"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.13.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of the npm CLI prior to 6.14.6 are vulnerable to an information exposure vulnerability through log files. The CLI supports URLs like `<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>`. The password value is not redacted and is printed to stdout and also to any generated log files.",
        "aliases": [
            "CVE-2020-15095"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:H/I:N/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.14.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "fstream",
        "version": "1.0.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `fstream` prior to 1.0.12 are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file. The `fstream.DirWriter()` function is vulnerable.\n\n\n## Recommendation\n\nUpgrade to version 1.0.12 or later.",
        "aliases": [
            "CVE-2019-13173"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.0.12"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm-user-validate",
        "version": "0.1.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "This affects the package npm-user-validate before 1.0.1. The regex that validates user emails took exponentially longer to process long input strings beginning with @ characters.",
        "aliases": [
            "CVE-2020-7754"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "handlebars",
        "version": "4.0.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `handlebars` prior to 4.0.14 are vulnerable to Prototype Pollution. Templates may alter an Objects' prototype, thus allowing an attacker to execute arbitrary code on the server.\n\n\n## Recommendation\n\nFor handlebars 4.1.x upgrade to 4.1.2 or later.\nFor handlebars 4.0.x upgrade to 4.0.14 or later.",
        "aliases": null,
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "4.1.0"
                    },
                    {
                        "fixed": "4.1.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "handlebars",
        "version": "4.0.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `handlebars` prior to 3.0.8 or 4.3.0 are vulnerable to Prototype Pollution leading to Remote Code Execution. Templates may alter an Objects' `__proto__` and `__defineGetter__` properties, which may allow an attacker to execute arbitrary code through crafted payloads.\n\n\n## Recommendation\n\nUpgrade to version 3.0.8, 4.3.0 or later.",
        "aliases": [
            "CVE-2019-19919"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.3.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "handlebars",
        "version": "4.0.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Handlebars before 4.4.5 allows Regular Expression Denial of Service (ReDoS) because of eager matching. The parser may be forced into an endless loop while processing crafted templates. This may allow attackers to exhaust system resources.",
        "aliases": [
            "CVE-2019-20922"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "4.0.0"
                    },
                    {
                        "fixed": "4.4.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "handlebars",
        "version": "4.0.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Handlebars before 3.0.8 and 4.x before 4.5.3 is vulnerable to Arbitrary Code Execution. The lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript. This can be used to run arbitrary code on a server processing Handlebars templates or in a victim's browser (effectively serving as XSS).",
        "aliases": [
            "CVE-2019-20920"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.0.8"
                    }
                ]
            }
        ]
    },
    {
        "name": "handlebars",
        "version": "4.0.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The package handlebars before 4.7.7 are vulnerable to Prototype Pollution when selecting certain compiling options to compile templates coming from an untrusted source.",
        "aliases": [
            "CVE-2021-23383"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.7.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "handlebars",
        "version": "4.0.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The package handlebars before 4.7.7 are vulnerable to Remote Code Execution (RCE) when selecting certain compiling options to compile templates coming from an untrusted source.",
        "aliases": [
            "CVE-2021-23369"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.7.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "path-parse",
        "version": "1.0.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of npm package `path-parse` are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.",
        "aliases": [
            "CVE-2021-23343"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.0.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "uglify-js",
        "version": "2.4.24",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `uglify-js` prior to 2.6.0 are affected by a regular expression denial of service vulnerability when malicious inputs are passed into the `parse()` method.\n\n\n### Proof of Concept\n\n```\nvar u = require('uglify-js');\nvar genstr = function (len, chr) {\n    var result = \"\";\n    for (i=0; i<=len; i++) {\n        result = result + chr;\n    }\n\n    return result;\n}\n\nu.parse(\"var a = \" + genstr(process.argv[2], \"1\") + \".1ee7;\");\n```\n\n### Results\n```\n$ time node test.js 10000\nreal\t0m1.091s\nuser\t0m1.047s\nsys\t0m0.039s\n\n$ time node test.js 80000\nreal\t0m6.486s\nuser\t0m6.229s\nsys\t0m0.094s\n```\n\n\n## Recommendation\n\nUpdate to version 2.6.0 or later.",
        "aliases": [
            "CVE-2015-8858"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.6.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "y18n",
        "version": "3.2.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Overview\n\nThe npm package `y18n` before versions 3.2.2, 4.0.1, and 5.0.5 is vulnerable to Prototype Pollution. \n\n### POC\n\n```\nconst y18n = require('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({polluted: true});\n\nconsole.log(polluted); // true\n```\n\n### Recommendation\n\nUpgrade to version 3.2.2, 4.0.1, 5.0.5 or later.",
        "aliases": [
            "CVE-2020-7774"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.2.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "yargs-parser",
        "version": "2.4.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `yargs-parser` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--foo.__proto__.bar baz'` adds a `bar` property with value `baz` to all objects. This is only exploitable if attackers have control over the arguments being passed to `yargs-parser`.\n\n\n\n## Recommendation\n\nUpgrade to versions 13.1.2, 15.0.1, 18.1.1 or later.",
        "aliases": [
            "CVE-2020-7608"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "6.0.0"
                    },
                    {
                        "fixed": "13.1.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "underscore",
        "version": "1.9.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The package `underscore` from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Execution via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",
        "aliases": [
            "CVE-2021-23358"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.3.2"
                    },
                    {
                        "fixed": "1.12.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "set-value",
        "version": "0.4.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `set-value` prior to 3.0.1 or 2.0.1 are vulnerable to Prototype Pollution. The `set` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `set-value` 3.x, upgrade to version 3.0.1 or later.\nIf you are using `set-value` 2.x, upgrade to version 2.0.1 or later.",
        "aliases": [
            "CVE-2019-10747"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "set-value",
        "version": "0.4.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "This affects the package `set-value` before 2.0.1, and starting with 3.0.0 but prior to 4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
        "aliases": [
            "CVE-2021-23440"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "3.0.0"
                    },
                    {
                        "fixed": "4.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "shelljs",
        "version": "0.3.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "shelljs is vulnerable to Improper Privilege Management",
        "aliases": [
            "CVE-2022-0144"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.8.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "swig",
        "version": "1.4.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Directory traversal vulnerability in swig-templates thru 2.0.4 and swig thru 1.4.2, allows attackers to read arbitrary files via the include or extends tags.",
        "aliases": [
            "CVE-2023-25345"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "last_affected": "2.0.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "trim-newlines",
        "version": "1.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "@rkesters/gnuplot is an easy to use node module to draw charts using gnuplot and ps2pdf. The trim-newlines package before 3.0.1 and 4.x before 4.0.1 for Node.js has an issue related to regular expression denial-of-service (ReDoS) for the .end() method.",
        "aliases": [
            "CVE-2021-33623"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "undefsafe",
        "version": "2.0.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "undefsafe before 2.0.3 is vulnerable to Prototype Pollution. The 'a' function could be tricked into adding or modifying properties of Object.prototype using a `__proto__` payload.",
        "aliases": [
            "CVE-2019-10795"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.0.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "websocket-extensions",
        "version": "0.1.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\nThe ReDoS flaw allows an attacker to exhaust the server's capacity to process\nincoming requests by sending a WebSocket handshake request containing a header\nof the following form:\n\n    Sec-WebSocket-Extensions: a; b=\"\\c\\c\\c\\c\\c\\c\\c\\c\\c\\c ...\n\nThat is, a header containing an unclosed string parameter value whose content is\na repeating two-byte sequence of a backslash and some other character. The\nparser takes exponential time to reject this header as invalid, and this will\nblock the processing of any other work on the same thread. Thus if you are\nrunning a single-threaded server, such a request can render your service\ncompletely unavailable.\n\n### Patches\n\nUsers should upgrade to version 0.1.4.\n\n### Workarounds\n\nThere are no known work-arounds other than disabling any public-facing\nWebSocket functionality you are operating.\n\n### References\n\n- https://blog.jcoglan.com/2020/06/02/redos-vulnerability-in-websocket-extensions/",
        "aliases": [
            "CVE-2020-7662"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.1.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "xml2js",
        "version": "0.4.4",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "xml2js versions before 0.5.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the `__proto__` property to be edited.",
        "aliases": [
            "CVE-2023-0842"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.5.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimatch",
        "version": "3.0.4",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/node_modules/fsevents/node_modules/needle/package-lock.json",
        "details": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
        "aliases": [
            "CVE-2022-3517"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.0.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimatch",
        "version": "3.0.4",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/node_modules/fsevents/node_modules/needle/package-lock.json",
        "details": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
        "aliases": [
            "CVE-2022-3517"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.0.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "0.0.8",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/node_modules/fsevents/node_modules/needle/package-lock.json",
        "details": "Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
        "aliases": [
            "CVE-2020-7598"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "0.0.8",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/node_modules/fsevents/node_modules/needle/package-lock.json",
        "details": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).",
        "aliases": [
            "CVE-2021-44906"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.0.0"
                    },
                    {
                        "fixed": "1.2.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "0.0.8",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/node_modules/fsevents/node_modules/needle/package-lock.json",
        "details": "Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
        "aliases": [
            "CVE-2020-7598"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "0.0.8",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/node_modules/fsevents/node_modules/needle/package-lock.json",
        "details": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).",
        "aliases": [
            "CVE-2021-44906"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.0.0"
                    },
                    {
                        "fixed": "1.2.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimatch",
        "version": "3.0.4",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/node_modules/fsevents/node_modules/needle/package-lock.json",
        "details": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
        "aliases": [
            "CVE-2022-3517"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.0.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "xml2js",
        "version": "0.4.19",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/node_modules/fsevents/node_modules/needle/package-lock.json",
        "details": "xml2js versions before 0.5.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the `__proto__` property to be edited.",
        "aliases": [
            "CVE-2023-0842"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.5.0"
                    }
                ]
            }
        ]
    }
]