[
    {
        "name": "adm-zip",
        "version": "0.4.4",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `adm-zip` before 0.4.9 are vulnerable to arbitrary file write when used to extract a specifically crafted archive that contains path traversal filenames (`../../file.txt` for example).\n\n\n## Recommendation\n\nUpdate to version 0.4.9 or later.",
        "aliases": [
            "CVE-2018-1002204"
        ],
        "severity": null,
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.4.11"
                    }
                ]
            }
        ]
    },
    {
        "name": "ajv",
        "version": "6.10.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
        "aliases": [
            "CVE-2020-15366"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.12.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "async",
        "version": "2.6.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the `mapValues()` method.",
        "aliases": [
            "CVE-2021-43138"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "3.0.0"
                    },
                    {
                        "fixed": "3.2.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "bl",
        "version": "1.0.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "A buffer over-read vulnerability exists in bl <4.0.3, <3.0.1, <2.2.1, and <1.2.3 which could allow an attacker to supply user input (even typed) that if it ends up in consume() argument and can become negative, the BufferList state can be corrupted, tricking it into exposing uninitialized memory via regular .slice() calls.",
        "aliases": [
            "CVE-2020-8244"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.2.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "bson",
        "version": "1.0.9",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Incorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure.",
        "aliases": [
            "CVE-2019-2391"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.1.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "bson",
        "version": "1.0.9",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "All versions of bson before 1.1.4 are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object's _bsontype, leading to cases where an object is serialized as a document rather than the intended BSON type.",
        "aliases": [
            "CVE-2020-7610"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.1.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "cryptiles",
        "version": "2.0.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `cryptiles` prior to 4.1.2 are vulnerable to Insufficient Entropy. The `randomDigits()` method does not provide sufficient entropy and its generates digits that are not evenly distributed.\n\n\n## Recommendation\n\nUpgrade to version 4.1.2. The package is deprecated and has been moved to `@hapi/cryptiles` and it is strongly recommended to use the maintained package.",
        "aliases": [
            "CVE-2018-1000620"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.1.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "decode-uri-component",
        "version": "0.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.",
        "aliases": [
            "CVE-2022-38900"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "diff",
        "version": "1.4.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "A vulnerability was found in diff before v3.5.0, the affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.",
        "aliases": null,
        "severity": null,
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.5.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "dot-prop",
        "version": "4.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Prototype pollution vulnerability in dot-prop npm package versions before 4.2.1 and versions 5.x before 5.1.1 allows an attacker to add arbitrary properties to JavaScript language constructs such as objects.",
        "aliases": [
            "CVE-2020-8116"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "getobject",
        "version": "0.1.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Prototype pollution vulnerability in 'getobject' version 0.1.0 allows an attacker to cause a denial of service and may lead to remote code execution.",
        "aliases": [
            "CVE-2020-28282"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.0.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "glob-parent",
        "version": "3.1.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.",
        "aliases": [
            "CVE-2020-28469"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "5.1.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "got",
        "version": "6.7.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The got package before 11.8.5 and 12.1.0 for Node.js allows a redirect to a UNIX socket.",
        "aliases": [
            "CVE-2022-33987"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "12.0.0"
                    },
                    {
                        "fixed": "12.1.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "growl",
        "version": "1.9.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `growl` do not properly sanitize input prior to passing it into a shell command, allowing for arbitrary command execution.\n\n\n## Recommendation\n\nUpdate to version 1.10.0 or later.",
        "aliases": [
            "CVE-2017-16042"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.10.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "grunt",
        "version": "1.0.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The package grunt before 1.3.0 are vulnerable to Arbitrary Code Execution due to the default usage of the function load() instead of its secure replacement safeLoad() of the package js-yaml inside grunt.file.readYAML.",
        "aliases": [
            "CVE-2020-7729"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.3.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "grunt",
        "version": "1.0.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Grunt prior to version 1.5.2 is vulnerable to path traversal.",
        "aliases": [
            "CVE-2022-0436"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.5.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "grunt",
        "version": "1.0.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "file.copy operations in GruntJS are vulnerable to a TOCTOU race condition leading to arbitrary file write in GitHub repository gruntjs/grunt prior to 1.5.3. This vulnerability is capable of arbitrary file writes which can lead to local privilege escalation to the GruntJS user if a lower-privileged user has write access to both source and destination directories as the lower-privileged user can create a symlink to the GruntJS user's .bashrc file or replace /etc/shadow file if the GruntJS user is root.",
        "aliases": [
            "CVE-2022-1537"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.5.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "hawk",
        "version": "3.1.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker's input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead.`Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`.",
        "aliases": [
            "CVE-2022-29167"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "9.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "helmet-csp",
        "version": "1.2.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `helmet-csp` before to 2.9.1 are vulnerable to a Configuration Override affecting the application's Content Security Policy (CSP). The package's browser sniffing for Firefox deletes the `default-src` CSP policy, which is the fallback policy. This allows an attacker to remove an application's default CSP, possibly rendering the application vulnerable to Cross-Site Scripting.\n\n\n## Recommendation\n\nUpgrade to version 2.9.1 or later. Setting the `browserSniff` configuration to `false` in vulnerable versions also mitigates the issue.",
        "aliases": null,
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.2.2"
                    },
                    {
                        "fixed": "2.9.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "hoek",
        "version": "2.16.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `hoek` prior to 4.2.1 and 5.0.3 are vulnerable to prototype pollution.\n\nThe `merge` function, and the `applyToDefaults` and `applyToDefaultsWithShallow` functions which leverage `merge` behind the scenes, are vulnerable to a prototype pollution attack when provided an _unvalidated_ payload created from a JSON string containing the `__proto__` property.\n\nThis can be demonstrated like so:\n\n```javascript\nvar Hoek = require('hoek');\nvar malicious_payload = '{\"__proto__\":{\"oops\":\"It works !\"}}';\n\nvar a = {};\nconsole.log(\"Before : \" + a.oops);\nHoek.merge({}, JSON.parse(malicious_payload));\nconsole.log(\"After : \" + a.oops);\n```\n\nThis type of attack can be used to overwrite existing properties causing a potential denial of service.\n\n\n## Recommendation\n\nUpdate to version 4.2.1, 5.0.3 or later.",
        "aliases": [
            "CVE-2018-3728"
        ],
        "severity": null,
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "5.0.0"
                    },
                    {
                        "fixed": "5.0.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "hosted-git-info",
        "version": "2.7.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity",
        "aliases": [
            "CVE-2021-23362"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.8.9"
                    }
                ]
            }
        ]
    },
    {
        "name": "i",
        "version": "0.3.6",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "inflect is customizable inflections for nodejs. inflect is vulnerable to Inefficient Regular Expression Complexity",
        "aliases": [
            "CVE-2021-3820"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.3.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "ini",
        "version": "1.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Overview\nThe `ini` npm package before version 1.3.6 has a Prototype Pollution vulnerability.\n\nIf an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.\n\n### Patches\n\nThis has been patched in 1.3.6.\n\n### Steps to reproduce\n\npayload.ini\n```\n[__proto__]\npolluted = \"polluted\"\n```\n\npoc.js:\n```\nvar fs = require('fs')\nvar ini = require('ini')\n\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\nconsole.log(parsed)\nconsole.log(parsed.__proto__)\nconsole.log(polluted)\n```\n\n```\n> node poc.js\n{}\n{ polluted: 'polluted' }\n{ polluted: 'polluted' }\npolluted\n```",
        "aliases": [
            "CVE-2020-7788"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.3.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "js-yaml",
        "version": "3.5.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `js-yaml` prior to 3.13.0 are vulnerable to Denial of Service. By parsing a carefully-crafted YAML file, the node process stalls and may exhaust system resources leading to a Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 3.13.0.",
        "aliases": null,
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.13.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "js-yaml",
        "version": "3.5.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `js-yaml` prior to 3.13.1 are vulnerable to Code Injection. The `load()` function may execute arbitrary code injected through a malicious YAML file. Objects that have `toString` as key, JavaScript code as value and are used as explicit mapping keys allow attackers to execute the supplied code through the `load()` function. The `safeLoad()` function is unaffected.\n\nAn example payload is \n`{ toString: !<tag:yaml.org,2002:js/function> 'function (){return Date.now()}' } : 1` \nwhich returns the object \n{\n  \"1553107949161\": 1\n}\n\n\n## Recommendation\n\nUpgrade to version 3.13.1.",
        "aliases": null,
        "severity": null,
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.13.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "json-schema",
        "version": "0.2.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "json-schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').",
        "aliases": [
            "CVE-2021-3918"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.4.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "jsonpointer",
        "version": "4.0.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "This affects the package `jsonpointer` before `5.0.0`. A type confusion vulnerability can lead to a bypass of a previous Prototype Pollution fix when the pointer components are arrays.",
        "aliases": [
            "CVE-2021-23807"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "5.0.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.11",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.",
        "aliases": [
            "CVE-2019-10744"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.12"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.11",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.",
        "aliases": [
            "CVE-2020-8203"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.20"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.11",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(\"time_cost2: \" + time_cost2)",
        "aliases": [
            "CVE-2020-28500"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.21"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.11",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.",
        "aliases": [
            "CVE-2021-23337"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.21"
                    }
                ]
            }
        ]
    },
    {
        "name": "marked",
        "version": "0.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `marked` are susceptible to a cross-site scripting vulnerability in link components when `sanitize:true` is configured. \n\n## Proof of Concept\n\nThis flaw exists because link URIs containing HTML entities get processed in an abnormal manner. Any HTML Entities get parsed on a best-effort basis and included in the resulting link, while if that parsing fails that character is omitted.\n\nFor example:\n\nA link URI such as\n```\njavascript&#x58document;alert&#40;1&#41;\n```\nRenders a valid link that when clicked will execute `alert(1)`.\n\n\n## Recommendation\n\nUpdate to version 0.3.6 or later.",
        "aliases": [
            "CVE-2016-10531"
        ],
        "severity": null,
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.3.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "marked",
        "version": "0.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "marked version 0.3.6 and earlier is vulnerable to an XSS attack in the data: URI parser.",
        "aliases": [
            "CVE-2017-1000427"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.3.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "marked",
        "version": "0.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `marked` are vulnerable to a regular expression denial of service. \n\nThe amplification in this vulnerability is significant, with 1,000 characters resulting in the event loop being blocked for around 6 seconds.\n\n\n## Recommendation\n\nUpdate to version 0.3.9 or later.",
        "aliases": [
            "CVE-2017-16114"
        ],
        "severity": null,
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.3.9"
                    }
                ]
            }
        ]
    },
    {
        "name": "marked",
        "version": "0.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\n_What kind of vulnerability is it?_\n\nDenial of service.\n\nThe regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings.\nPoC is the following.\n\n```javascript\nimport * as marked from 'marked';\n\nconsole.log(marked.parse(`[x]: x\n\n\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](`));\n```\n\n_Who is impacted?_\n\nAnyone who runs untrusted markdown through marked and does not use a worker with a time limit.\n\n### Patches\n\n_Has the problem been patched?_\n\nYes\n\n_What versions should users upgrade to?_\n\n4.0.10\n\n### Workarounds\n\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nDo not run untrusted markdown through marked or run marked on a [worker](https://marked.js.org/using_advanced#workers) thread and set a reasonable time limit to prevent draining resources.\n\n### References\n\n_Are there any links users can visit to find out more?_\n\n- https://marked.js.org/using_advanced#workers\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [marked](https://github.com/markedjs/marked)\n",
        "aliases": [
            "CVE-2022-21681"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.0.10"
                    }
                ]
            }
        ]
    },
    {
        "name": "marked",
        "version": "0.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\n_What kind of vulnerability is it?_\n\nDenial of service.\n\nThe regular expression `block.def` may cause catastrophic backtracking against some strings.\nPoC is the following.\n\n```javascript\nimport * as marked from \"marked\";\n\nmarked.parse(`[x]:${' '.repeat(1500)}x ${' '.repeat(1500)} x`);\n```\n\n_Who is impacted?_\n\nAnyone who runs untrusted markdown through marked and does not use a worker with a time limit.\n\n### Patches\n\n_Has the problem been patched?_\n\nYes\n\n_What versions should users upgrade to?_\n\n4.0.10\n\n### Workarounds\n\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nDo not run untrusted markdown through marked or run marked on a [worker](https://marked.js.org/using_advanced#workers) thread and set a reasonable time limit to prevent draining resources.\n\n### References\n\n_Are there any links users can visit to find out more?_\n\n- https://marked.js.org/using_advanced#workers\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [marked](https://github.com/markedjs/marked)\n",
        "aliases": [
            "CVE-2022-21680"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.0.10"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimatch",
        "version": "3.0.4",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
        "aliases": [
            "CVE-2022-3517"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.0.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "0.0.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
        "aliases": [
            "CVE-2020-7598"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "0.0.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).",
        "aliases": [
            "CVE-2021-44906"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.0.0"
                    },
                    {
                        "fixed": "1.2.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "mixin-deep",
        "version": "1.3.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `mixin-deep` prior to 2.0.1 or 1.3.2 are vulnerable to Prototype Pollution. The `mixinDeep` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `mixin-deep` 2.x, upgrade to version 2.0.1 or later.\nIf you are using `mixin-deep` 1.x, upgrade to version 1.3.2 or later.",
        "aliases": [
            "CVE-2019-10746"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.3.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "moment",
        "version": "2.24.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\nThis vulnerability impacts npm (server) users of moment.js, especially if user provided locale string, eg `fr` is directly used to switch moment locale.\n\n### Patches\nThis problem is patched in 2.29.2, and the patch can be applied to all affected versions (from 1.0.1 up until 2.29.1, inclusive).\n\n### Workarounds\nSanitize user-provided locale name before passing it to moment.js.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [moment repo](https://github.com/moment/moment)\n",
        "aliases": [
            "CVE-2022-24785"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.29.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "moment",
        "version": "2.24.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\n* using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs\n* noticeable slowdown is observed with inputs above 10k characters\n* users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks\n\n### Patches\nThe problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking.\n\n### Workarounds\nIn general, given the proliferation of ReDoS attacks, it makes sense to limit the length of the user input to something sane, like 200 characters or less. I haven't seen legitimate cases of date-time strings longer than that, so all moment users who do pass a user-originating string to constructor are encouraged to apply such a rudimentary filter, that would help with this but also most future ReDoS vulnerabilities.\n\n### References\nThere is an excellent writeup of the issue here: https://github.com/moment/moment/pull/6015#issuecomment-1152961973=\n\n### Details\nThe issue is rooted in the code that removes legacy comments (stuff inside parenthesis) from strings during rfc2822 parsing. `moment(\"(\".repeat(500000))` will take a few minutes to process, which is unacceptable.",
        "aliases": [
            "CVE-2022-31129"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "2.18.0"
                    },
                    {
                        "fixed": "2.29.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "mongodb",
        "version": "2.2.36",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `mongodb` prior to 3.1.13 are vulnerable to Denial of Service. The package fails to properly catch an exception when a collection name is invalid and the DB does not exist, crashing the application.\n\n\n## Recommendation\n\nUpgrade to version 3.1.13 or later.",
        "aliases": null,
        "severity": null,
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.1.13"
                    }
                ]
            }
        ]
    },
    {
        "name": "nconf",
        "version": "0.10.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.",
        "aliases": [
            "CVE-2022-21803"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.11.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "An issue was discovered in an npm 5.7.0 2018-02-21 pre-release (marked as \"next: 5.7.0\" and therefore automatically installed by an \"npm upgrade -g npm\" command, and also announced in the vendor's blog without mention of pre-release status). It might allow local users to bypass intended filesystem access restrictions because ownerships of /etc and /usr directories are being changed unexpectedly, related to a \"correctMkdir\" issue.",
        "aliases": [
            "CVE-2018-7408"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "5.7.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended node_modules folder through the bin field. A properly constructed entry in the package.json bin field would allow a package publisher to create files on a user's system when the package is installed. It is only possible to affect files that the user running `npm install` has access to and it is not possible to over write files that already exist on disk.\n\nThis behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.\n\n\n## Recommendation\n\nUpgrade to version 6.13.3 or later.",
        "aliases": [
            "CVE-2019-16775"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.13.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of the npm CLI prior to 6.13.3 are vulnerable to a symlink reference outside of node_modules. It is possible for packages to create symlinks to files outside of the`node_modules` folder through the `bin` field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user\u2019s system when the package is installed. Only files accessible by the user running the `npm install` are affected.  \n\nThis behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.\n\n\n## Recommendation\n\nUpgrade to version 6.13.3 or later.",
        "aliases": [
            "CVE-2019-16776"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.13.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of  the npm CLI prior to 6.13.4 are vulnerable to a Global node_modules Binary Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations. \n\nFor example, if a package was installed globally and created a `serve` binary, any subsequent installs of packages that also create a `serve` binary would overwrite the first binary. This will not overwrite system binaries but only binaries put into the global node_modules directory.\n\nThis behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.\n\n\n## Recommendation\n\nUpgrade to version 6.13.4 or later.",
        "aliases": [
            "CVE-2019-16777"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.13.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "npm",
        "version": "3.10.10",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of the npm CLI prior to 6.14.6 are vulnerable to an information exposure vulnerability through log files. The CLI supports URLs like `<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>`. The password value is not redacted and is printed to stdout and also to any generated log files.",
        "aliases": [
            "CVE-2020-15095"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:H/I:N/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.14.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "qs",
        "version": "6.5.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
        "aliases": [
            "CVE-2022-24999"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "6.10.0"
                    },
                    {
                        "fixed": "6.10.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "request",
        "version": "2.79.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The Request package through 2.88.2 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "aliases": [
            "CVE-2023-28155"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "last_affected": "2.88.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "set-value",
        "version": "2.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `set-value` prior to 3.0.1 or 2.0.1 are vulnerable to Prototype Pollution. The `set` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `set-value` 3.x, upgrade to version 3.0.1 or later.\nIf you are using `set-value` 2.x, upgrade to version 2.0.1 or later.",
        "aliases": [
            "CVE-2019-10747"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "set-value",
        "version": "2.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "This affects the package `set-value` before 2.0.1, and starting with 3.0.0 but prior to 4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
        "aliases": [
            "CVE-2021-23440"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "3.0.0"
                    },
                    {
                        "fixed": "4.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "shelljs",
        "version": "0.3.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "shelljs is vulnerable to Improper Privilege Management",
        "aliases": [
            "CVE-2022-0144"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.8.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "shelljs",
        "version": "0.3.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\nOutput from the synchronous version of `shell.exec()` may be visible to other users on the same system. You may be affected if you execute `shell.exec()` in multi-user Mac, Linux, or WSL environments, or if you execute `shell.exec()` as the root user.\n\nOther shelljs functions (including the asynchronous version of `shell.exec()`) are not impacted.\n\n### Patches\nPatched in shelljs 0.8.5\n\n### Workarounds\nRecommended action is to upgrade to 0.8.5.\n\n### References\nhttps://huntr.dev/bounties/50996581-c08e-4eed-a90e-c0bac082679c/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Ask at https://github.com/shelljs/shelljs/issues/1058\n* Open an issue at https://github.com/shelljs/shelljs/issues/new\n",
        "aliases": null,
        "severity": null,
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.8.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "swig",
        "version": "1.4.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Directory traversal vulnerability in swig-templates thru 2.0.4 and swig thru 1.4.2, allows attackers to read arbitrary files via the include or extends tags.",
        "aliases": [
            "CVE-2023-25345"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "last_affected": "2.0.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "trim-newlines",
        "version": "1.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "@rkesters/gnuplot is an easy to use node module to draw charts using gnuplot and ps2pdf. The trim-newlines package before 3.0.1 and 4.x before 4.0.1 for Node.js has an issue related to regular expression denial-of-service (ReDoS) for the .end() method.",
        "aliases": [
            "CVE-2021-33623"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "tunnel-agent",
        "version": "0.4.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `tunnel-agent` before 0.6.0 are vulnerable to memory exposure.\n\nThis is exploitable if user supplied input is provided to the auth value and is a number.\n\nProof-of-concept:\n```js\nrequire('request')({\n  method: 'GET',\n  uri: 'http://www.example.com',\n  tunnel: true,\n  proxy:{\n    protocol: 'http:',\n    host:'127.0.0.1',\n    port:8080,\n    auth:USERSUPPLIEDINPUT // number\n  }\n});\n```\n\n\n## Recommendation\n\nUpdate to version 0.6.0 or later.",
        "aliases": null,
        "severity": null,
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.6.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "uglify-js",
        "version": "2.4.24",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "Versions of `uglify-js` prior to 2.6.0 are affected by a regular expression denial of service vulnerability when malicious inputs are passed into the `parse()` method.\n\n\n### Proof of Concept\n\n```\nvar u = require('uglify-js');\nvar genstr = function (len, chr) {\n    var result = \"\";\n    for (i=0; i<=len; i++) {\n        result = result + chr;\n    }\n\n    return result;\n}\n\nu.parse(\"var a = \" + genstr(process.argv[2], \"1\") + \".1ee7;\");\n```\n\n### Results\n```\n$ time node test.js 10000\nreal\t0m1.091s\nuser\t0m1.047s\nsys\t0m0.039s\n\n$ time node test.js 80000\nreal\t0m6.486s\nuser\t0m6.229s\nsys\t0m0.094s\n```\n\n\n## Recommendation\n\nUpdate to version 2.6.0 or later.",
        "aliases": [
            "CVE-2015-8858"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.6.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "undefsafe",
        "version": "2.0.2",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "undefsafe before 2.0.3 is vulnerable to Prototype Pollution. The 'a' function could be tricked into adding or modifying properties of Object.prototype using a `__proto__` payload.",
        "aliases": [
            "CVE-2019-10795"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.0.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "underscore",
        "version": "1.9.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "The package `underscore` from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Execution via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",
        "aliases": [
            "CVE-2021-23358"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.3.2"
                    },
                    {
                        "fixed": "1.12.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "websocket-extensions",
        "version": "0.1.3",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Impact\n\nThe ReDoS flaw allows an attacker to exhaust the server's capacity to process\nincoming requests by sending a WebSocket handshake request containing a header\nof the following form:\n\n    Sec-WebSocket-Extensions: a; b=\"\\c\\c\\c\\c\\c\\c\\c\\c\\c\\c ...\n\nThat is, a header containing an unclosed string parameter value whose content is\na repeating two-byte sequence of a backslash and some other character. The\nparser takes exponential time to reject this header as invalid, and this will\nblock the processing of any other work on the same thread. Thus if you are\nrunning a single-threaded server, such a request can render your service\ncompletely unavailable.\n\n### Patches\n\nUsers should upgrade to version 0.1.4.\n\n### Workarounds\n\nThere are no known work-arounds other than disabling any public-facing\nWebSocket functionality you are operating.\n\n### References\n\n- https://blog.jcoglan.com/2020/06/02/redos-vulnerability-in-websocket-extensions/",
        "aliases": [
            "CVE-2020-7662"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.1.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "xml2js",
        "version": "0.4.4",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "xml2js versions before 0.5.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the `__proto__` property to be edited.",
        "aliases": [
            "CVE-2023-0842"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.5.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "y18n",
        "version": "3.2.1",
        "ecosystem": "npm",
        "fileLocation": "/home/caffeine/Documents/Code/vulnerable-app/NodeGoat/package-lock.json",
        "details": "### Overview\n\nThe npm package `y18n` before versions 3.2.2, 4.0.1, and 5.0.5 is vulnerable to Prototype Pollution. \n\n### POC\n\n```\nconst y18n = require('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({polluted: true});\n\nconsole.log(polluted); // true\n```\n\n### Recommendation\n\nUpgrade to version 3.2.2, 4.0.1, 5.0.5 or later.",
        "aliases": [
            "CVE-2020-7774"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "affected": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.2.2"
                    }
                ]
            }
        ]
    }
]