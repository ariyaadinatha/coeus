[
    {
        "name": "future",
        "version": "0.18.2",
        "ecosystem": "PyPI",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/requirements.txt",
        "details": "An issue discovered in Python Charmers Future 0.18.2 and earlier allows remote attackers to cause a denial of service via crafted Set-Cookie header from malicious web server. This issue has been patched in version 0.18.3.",
        "aliases": [
            "CVE-2022-40899"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.18.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "mpmath",
        "version": "1.2.1",
        "ecosystem": "PyPI",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/requirements.txt",
        "details": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in Mpmath v1.0.0 when the mpmathify function is called.",
        "aliases": [
            "CVE-2021-29063",
            "GHSA-f865-m6cq-j9vx"
        ],
        "severity": null,
        "fixed": [
            {
                "type": "GIT",
                "repo": "https://github.com/fredrik-johansson/mpmath",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "46d44c3c8f3244017fe1eb102d564eb4ab8ef750"
                    }
                ]
            },
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "0"
                    }
                ]
            }
        ]
    },
    {
        "name": "guzzlehttp/guzzle",
        "version": "6.5.5",
        "ecosystem": "Packagist",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/composer.lock",
        "details": "### Impact\n\n`Authorization` headers on requests are sensitive information. When using our Curl handler, it is possible to use the `CURLOPT_HTTPAUTH` option to specify an `Authorization` header. On making a request which responds with a redirect to a URI with a different origin, if we choose to follow it, we should remove the `CURLOPT_HTTPAUTH` and `CURLOPT_USERPWD` options before continuing, stopping curl from appending the `Authorization` header to the new request. Previously, we would only consider a change in host. Now, we consider any change in host, port or scheme to be a change in origin.\n\n### Patches\n\nAffected Guzzle 7 users should upgrade to Guzzle 7.4.5 as soon as possible. Affected users using any earlier series of Guzzle should upgrade to Guzzle 6.5.8 or 7.4.5. Note that a partial fix was implemented in Guzzle 7.4.2, where a change in host would trigger removal of the curl-added Authorization header, however this earlier fix did not cover change in scheme or change in port.\n\n### Workarounds\n\nIf you do not require or expect redirects to be followed, one should simply disable redirects all together. Alternatively, one can specify to use the Guzzle stream handler backend, rather than curl.\n\n### References\n\n* [RFC9110 Section 15.4](https://www.rfc-editor.org/rfc/rfc9110.html#name-redirection-3xx)\n* [CVE-2022-27776](https://curl.se/docs/CVE-2022-27776.html)\n\n### For more information\n\nIf you have any questions or comments about this advisory, please get in touch with us in `#guzzle` on the [PHP HTTP Slack](https://php-http.slack.com/). Do not report additional security advisories in that public channel, however - please follow our [vulnerability reporting process](https://github.com/guzzle/guzzle/security/policy).\n",
        "aliases": [
            "CVE-2022-31090"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N"
            }
        ],
        "fixed": [
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.5.8"
                    }
                ]
            }
        ]
    },
    {
        "name": "guzzlehttp/guzzle",
        "version": "6.5.5",
        "ecosystem": "Packagist",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/composer.lock",
        "details": "### Impact\n\nPrevious version of Guzzle contain a vulnerability with the cookie middleware. The vulnerability is that it is not checked if the cookie domain equals the domain of the server which sets the cookie via the `Set-Cookie` header, allowing a malicious server to set cookies for unrelated domains. For example an attacker at `www.example.com` might set a session cookie for `api.example.net`, logging the Guzzle client into their account and retrieving private API requests from the security log of their account.\n\nNote that our cookie middleware is disabled by default, so most library consumers will not be affected by this issue. Only those who manually add the cookie middleware to the handler stack or construct the client with `['cookies' => true]` are affected. Moreover, those who do not use the same Guzzle client to call multiple domains and have disabled redirect forwarding are not affected by this vulnerability.\n\n### Patches\n\nAffected Guzzle 7 users should upgrade to Guzzle 7.4.3 as soon as possible. Affected users using any earlier series of Guzzle should upgrade to Guzzle 6.5.6 or 7.4.3.\n\n### Workarounds\n\nIf you do not need support for cookies, turn off the cookie middleware. It is already off by default, but if you have turned it on and no longer need it, turn it off.\n\n### References\n\n* [RFC6265 Section 5.3](https://datatracker.ietf.org/doc/html/rfc6265#section-5.3)\n* [RFC9110 Section 15.4](https://www.rfc-editor.org/rfc/rfc9110.html#name-redirection-3xx)\n\n### For more information\n\nIf you have any questions or comments about this advisory, please get in touch with us in `#guzzle` on the [PHP HTTP Slack](https://php-http.slack.com/). Do not report additional security advisories in that public channel, however - please follow our [vulnerability reporting process](https://github.com/guzzle/guzzle/security/policy).\n",
        "aliases": [
            "CVE-2022-29248"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "fixed": [
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.5.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "guzzlehttp/guzzle",
        "version": "6.5.5",
        "ecosystem": "Packagist",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/composer.lock",
        "details": "### Impact\n\n`Cookie` headers on requests are sensitive information. On making a request using the `https` scheme to a server which responds with a redirect to a URI with the `http` scheme, or on making a request to a server which responds with a redirect to a a URI to a different host, we should not forward the `Cookie` header on. Prior to this fix, only cookies that were managed by our cookie middleware would be safely removed, and any `Cookie` header manually added to the initial request would not be stripped. We now always strip it, and allow the cookie middleware to re-add any cookies that it deems should be there.\n\n### Patches\n\nAffected Guzzle 7 users should upgrade to Guzzle 7.4.4 as soon as possible. Affected users using any earlier series of Guzzle should upgrade to Guzzle 6.5.7 or 7.4.4.\n\n### Workarounds\n\nAn alternative approach would be to use your own redirect middleware, rather than ours, if you are unable to upgrade. If you do not require or expect redirects to be followed, one should simply disable redirects all together.\n\n### References\n\n* [RFC9110 Section 15.4](https://www.rfc-editor.org/rfc/rfc9110.html#name-redirection-3xx)\n\n### For more information\n\nIf you have any questions or comments about this advisory, please get in touch with us in `#guzzle` on the [PHP HTTP Slack](https://php-http.slack.com/). Do not report additional security advisories in that public channel, however - please follow our [vulnerability reporting process](https://github.com/guzzle/guzzle/security/policy).\n",
        "aliases": [
            "CVE-2022-31042"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
            }
        ],
        "fixed": [
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "4.0.0"
                    },
                    {
                        "fixed": "6.5.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "guzzlehttp/guzzle",
        "version": "6.5.5",
        "ecosystem": "Packagist",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/composer.lock",
        "details": "### Impact\n\n`Authorization` and `Cookie` headers on requests are sensitive information. On making a request which responds with a redirect to a URI with a different port, if we choose to follow it, we should remove the `Authorization` and `Cookie` headers from the request, before containing. Previously, we would only consider a change in host or scheme downgrade. Now, we consider any change in host, port or scheme to be a change in origin.\n\n### Patches\n\nAffected Guzzle 7 users should upgrade to Guzzle 7.4.5 as soon as possible. Affected users using any earlier series of Guzzle should upgrade to Guzzle 6.5.8 or 7.4.5.\n\n### Workarounds\n\nAn alternative approach would be to use your own redirect middleware, rather than ours, if you are unable to upgrade. If you do not require or expect redirects to be followed, one should simply disable redirects all together.\n\n### References\n\n* [RFC9110 Section 15.4](https://www.rfc-editor.org/rfc/rfc9110.html#name-redirection-3xx)\n* [CVE-2022-27776](https://curl.se/docs/CVE-2022-27776.html)\n\n### For more information\n\nIf you have any questions or comments about this advisory, please get in touch with us in `#guzzle` on the [PHP HTTP Slack](https://php-http.slack.com/). Do not report additional security advisories in that public channel, however please follow our [vulnerability reporting process](https://github.com/guzzle/guzzle/security/policy).\n",
        "aliases": [
            "CVE-2022-31091"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N"
            }
        ],
        "fixed": [
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.5.8"
                    }
                ]
            }
        ]
    },
    {
        "name": "guzzlehttp/guzzle",
        "version": "6.5.5",
        "ecosystem": "Packagist",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/composer.lock",
        "details": "### Impact\n\n`Authorization` headers on requests are sensitive information. On making a request using the `https` scheme to a server which responds with a redirect to a URI with the `http` scheme, we should not forward the `Authorization` header on. This is much the same as to how we don't forward on the header if the host changes. Prior to this fix, `https` to `http` downgrades did not result in the `Authorization` header being removed, only changes to the host.\n\n### Patches\n\nAffected Guzzle 7 users should upgrade to Guzzle 7.4.4 as soon as possible. Affected users using any earlier series of Guzzle should upgrade to Guzzle 6.5.7 or 7.4.4.\n\n### Workarounds\n\nAn alternative approach would be to use your own redirect middleware, rather than ours, if you are unable to upgrade. If you do not require or expect redirects to be followed, one should simply disable redirects all together.\n\n### References\n\n* [RFC9110 Section 15.4](https://www.rfc-editor.org/rfc/rfc9110.html#name-redirection-3xx)\n\n### For more information\n\nIf you have any questions or comments about this advisory, please get in touch with us in `#guzzle` on the [PHP HTTP Slack](https://php-http.slack.com/). Do not report additional security advisories in that public channel, however - please follow our [vulnerability reporting process](https://github.com/guzzle/guzzle/security/policy).\n",
        "aliases": [
            "CVE-2022-31043"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
            }
        ],
        "fixed": [
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "4.0.0"
                    },
                    {
                        "fixed": "6.5.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "guzzlehttp/psr7",
        "version": "1.6.1",
        "ecosystem": "Packagist",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/composer.lock",
        "details": "### Impact\nIn proper header parsing. An attacker could sneak in a new line character and pass untrusted values. \n\n### Patches\nThe issue is patched in 1.8.4 and 2.1.1.\n\n### Workarounds\nThere are no known workarounds.\n",
        "aliases": [
            "CVE-2022-24775"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
            }
        ],
        "fixed": [
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.8.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "laravel/framework",
        "version": "v7.17.2",
        "ecosystem": "Packagist",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/composer.lock",
        "details": "### Description\n\nLaravel versions <6.20.12, <7.30.3 & <8.22.1 contain a query binding exploitation.\n\nIf a request is crafted where a field that is normally a non-array value is an array, and that input is not validated or cast to its expected type before being passed to the query builder, an unexpected number of query bindings can be added to the query. In some situations, this will simply lead to no results being returned by the query builder; however, it is possible certain queries could be affected in a way that causes the query to return unexpected results.\n\nThis vulnerability was discovered by Tim Groenevelt (tim.g@foodbyus.com).\n\n### References\n\n- https://github.com/laravel/framework/pull/35865",
        "aliases": [
            "CVE-2021-21263"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N"
            }
        ],
        "fixed": [
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.20.12"
                    }
                ]
            }
        ]
    },
    {
        "name": "laravel/framework",
        "version": "v7.17.2",
        "ecosystem": "Packagist",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/composer.lock",
        "details": "A security researcher has disclosed a possible XSS vulnerability in the Blade templating engine.\n\nGiven the following two Blade templates:\n\nresources/views/parent.blade.php:\n\n```html\n@section('content')\n<input value=\"{{ $value }}\">\n@show\n```\n\nresources/views/child.blade.php:\n\n```html\n@extends('parent')\n\n@section('content')\n<input value=\"{{ $value }}\">\n@endsection\n```\n\nAnd a route like the following:\n\n```php\nRoute::get('/example', function() {\n    $value = '//localhost/###parent-placeholder-040f06fd774092478d450774f5ba30c5da78acc8## onclick=location.assign(this.value);//';\n\n    return view('child', ['value' => $value]);\n});\n```\n\nThe broken HTML element may be clicked and the user is taken to another location in their browser due to XSS. This is due to the user being able to guess the parent placeholder SHA-1 hash by trying common names of sections. If the parent template contains an exploitable HTML structure an XSS vulnerability can be exposed.\n\nThis vulnerability has been patched by determining the parent placeholder at runtime and using a random hash that is unique to each request.",
        "aliases": [
            "CVE-2021-43808"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
            }
        ],
        "fixed": [
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.20.42"
                    }
                ]
            }
        ]
    },
    {
        "name": "laravel/framework",
        "version": "v7.17.2",
        "ecosystem": "Packagist",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/composer.lock",
        "details": "An issue was discovered in Laravel before 6.18.35 and 7.x before 7.24.0. The $guarded property is mishandled in some situations involving requests with JSON column nesting expressions.",
        "aliases": [
            "CVE-2020-24941"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
            }
        ],
        "fixed": [
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.18.35"
                    }
                ]
            }
        ]
    },
    {
        "name": "laravel/framework",
        "version": "v7.17.2",
        "ecosystem": "Packagist",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/composer.lock",
        "details": "This is a follow-up to the previous security advisory (GHSA-3p32-j457-pg5x) which addresses a few additional edge cases.\n\nIf a request is crafted where a field that is normally a non-array value is an array, and that input is not validated or cast to its expected type before being passed to the query builder, an unexpected number of query bindings can be added to the query. In some situations, this will simply lead to no results being returned by the query builder; however, it is possible certain queries could be affected in a way that causes the query to return unexpected results.",
        "aliases": null,
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N"
            }
        ],
        "fixed": [
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.20.14"
                    }
                ]
            }
        ]
    },
    {
        "name": "league/flysystem",
        "version": "1.0.69",
        "ecosystem": "Packagist",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/composer.lock",
        "details": "### Impact\n\nThe whitespace normalisation using in 1.x and 2.x removes any unicode whitespace. Under certain specific conditions this could potentially allow a malicious user to execute code remotely.\n\nThe conditions: \n\n- A user is allowed to supply the path or filename of an uploaded file.\n- The supplied path or filename is not checked against unicode chars.\n- The supplied pathname checked against an extension deny-list, not an allow-list.\n- The supplied path or filename contains a unicode whitespace char in the extension.\n- The uploaded file is stored in a directory that allows PHP code to be executed.\n\nGiven these conditions are met a user can upload and execute arbitrary code on the system under attack.\n\n### Patches\n\nThe unicode whitespace removal has been replaced with a rejection (exception).\n\nThe library has been patched in:\n- 1.x: https://github.com/thephpleague/flysystem/commit/f3ad69181b8afed2c9edf7be5a2918144ff4ea32\n- 2.x: https://github.com/thephpleague/flysystem/commit/a3c694de9f7e844b76f9d1b61296ebf6e8d89d74\n\n### Workarounds\n\nFor 1.x users, upgrade to 1.1.4. For 2.x users, upgrade to 2.1.1.\n",
        "aliases": [
            "CVE-2021-32708"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "fixed": [
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.1.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "symfony/http-kernel",
        "version": "v5.1.2",
        "ecosystem": "Packagist",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/composer.lock",
        "details": "Description\n-----------\n\nThe `CachingHttpClient` class from the HttpClient Symfony component relies on the `HttpCache` class to handle requests. `HttpCache` uses internal headers like `X-Body-Eval` and `X-Body-File` to control the restoration of cached responses. The class was initially written with surrogate caching and ESI support in mind (all HTTP calls come from a trusted backend in that scenario). But when used by `CachingHttpClient` and if an attacker can control the response for a request being made by the `CachingHttpClient`, remote code execution is possible.\n\nResolution\n----------\n\nHTTP headers designed for internal use in `HttpCache` are now stripped from remote responses before being passed to `HttpCache`.\n\nThe patch for this issue is available [here](https://github.com/symfony/symfony/commit/d9910e0b33a2e0f993abff41c6fbc86951b66d78) for the 4.4 branch.\n\nCredits\n-------\n\nI would like to thank Matthias Pigulla (webfactory GmbH) for reporting and fixing the issue.",
        "aliases": [
            "CVE-2020-15094"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:H"
            }
        ],
        "fixed": [
            {
                "type": "ECOSYSTEM",
                "events": [
                    {
                        "introduced": "4.3.0"
                    },
                    {
                        "fixed": "4.4.13"
                    }
                ]
            }
        ]
    },
    {
        "name": "ajv",
        "version": "6.12.2",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
        "aliases": [
            "CVE-2020-15366"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.12.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "ansi-html",
        "version": "0.0.7",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "This affects all versions of package ansi-html. If an attacker provides a malicious string, it will get stuck processing the input for an extremely long time.",
        "aliases": [
            "CVE-2021-23424"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.0.8"
                    }
                ]
            }
        ]
    },
    {
        "name": "async",
        "version": "2.6.3",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the `mapValues()` method.",
        "aliases": [
            "CVE-2021-43138"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "3.0.0"
                    },
                    {
                        "fixed": "3.2.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "axios",
        "version": "0.19.2",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "Axios NPM package 0.21.0 contains a Server-Side Request Forgery (SSRF) vulnerability where an attacker is able to bypass a proxy by providing a URL that responds with a redirect to a restricted host or IP address.",
        "aliases": [
            "CVE-2020-28168"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.21.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "axios",
        "version": "0.19.2",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "axios before v0.21.2 is vulnerable to Inefficient Regular Expression Complexity.",
        "aliases": [
            "CVE-2021-3749"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.21.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "browserslist",
        "version": "4.12.2",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "The package browserslist from 4.0.0 and before 4.16.5 are vulnerable to Regular Expression Denial of Service (ReDoS) during parsing of queries.",
        "aliases": [
            "CVE-2021-23364"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "4.0.0"
                    },
                    {
                        "fixed": "4.16.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "color-string",
        "version": "1.5.3",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "In the npm package `color-string`, there is a  ReDos (Regular Expression Denial of Service) vulnerability regarding an exponential time complexity for\nlinearly increasing input lengths for `hwb()` color strings.\n\nStrings reaching more than 5000 characters would see several\nmilliseconds of processing time; strings reaching more than\n50,000 characters began seeing 1500ms (1.5s) of processing time.\n\nThe cause was due to a the regular expression that parses\nhwb() strings - specifically, the hue value - where\nthe integer portion of the hue value used a 0-or-more quantifier\nshortly thereafter followed by a 1-or-more quantifier.\n\nThis caused excessive backtracking and a cartesian scan,\nresulting in exponential time complexity given a linear\nincrease in input length.",
        "aliases": [
            "CVE-2021-29060"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.5.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "decode-uri-component",
        "version": "0.2.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.",
        "aliases": [
            "CVE-2022-38900"
        ],
        "severity": null,
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.2.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "dns-packet",
        "version": "1.3.1",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "This affects the package dns-packet before versions 1.3.2 and 5.2.2. It creates buffers with allocUnsafe and does not always fill them before forming network packets. This can expose internal application memory over unencrypted network when querying crafted invalid domain names.",
        "aliases": [
            "CVE-2021-23386"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "2.0.0"
                    },
                    {
                        "fixed": "5.2.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "elliptic",
        "version": "6.5.3",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "The npm package `elliptic` before version 6.5.4 are vulnerable to Cryptographic Issues via the secp256k1 implementation in elliptic/ec/key.js. There is no check to confirm that the public key point passed into the derive function actually exists on the secp256k1 curve. This results in the potential for the private key used in this implementation to be revealed after a number of ECDH operations are performed.",
        "aliases": [
            "CVE-2020-28498"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "6.5.4"
                    }
                ]
            }
        ]
    },
    {
        "name": "eventsource",
        "version": "1.0.7",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "When fetching an url with a link to an external site (Redirect), the users Cookies & Autorisation headers are leaked to the third party application. According to the same-origin-policy, the header should be \"sanitized.\"",
        "aliases": [
            "CVE-2022-1650"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.1.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "express",
        "version": "4.17.1",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).",
        "aliases": [
            "CVE-2022-24999"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "follow-redirects",
        "version": "1.5.10",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "follow-redirects is vulnerable to Exposure of Private Personal Information to an Unauthorized Actor",
        "aliases": [
            "CVE-2022-0155"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.14.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "follow-redirects",
        "version": "1.5.10",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "Exposure of Sensitive Information to an Unauthorized Actor in NPM follow-redirects prior to 1.14.8.",
        "aliases": [
            "CVE-2022-0536"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.14.8"
                    }
                ]
            }
        ]
    },
    {
        "name": "glob-parent",
        "version": "3.1.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.",
        "aliases": [
            "CVE-2020-28469"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "5.1.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "ini",
        "version": "1.3.5",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "### Overview\nThe `ini` npm package before version 1.3.6 has a Prototype Pollution vulnerability.\n\nIf an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.\n\n### Patches\n\nThis has been patched in 1.3.6.\n\n### Steps to reproduce\n\npayload.ini\n```\n[__proto__]\npolluted = \"polluted\"\n```\n\npoc.js:\n```\nvar fs = require('fs')\nvar ini = require('ini')\n\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\nconsole.log(parsed)\nconsole.log(parsed.__proto__)\nconsole.log(polluted)\n```\n\n```\n> node poc.js\n{}\n{ polluted: 'polluted' }\n{ polluted: 'polluted' }\npolluted\n```",
        "aliases": [
            "CVE-2020-7788"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.3.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "is-svg",
        "version": "3.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "The is-svg package 2.1.0 through 4.2.1 for Node.js uses a regular expression that is vulnerable to Regular Expression Denial of Service (ReDoS). If an attacker provides a malicious string, is-svg will get stuck processing the input for a very long time.",
        "aliases": [
            "CVE-2021-28092"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "2.1.0"
                    },
                    {
                        "fixed": "4.2.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "is-svg",
        "version": "3.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "A vulnerability was discovered in IS-SVG version 4.3.1 and below where a Regular Expression Denial of Service (ReDOS) occurs if the application is provided and checks a crafted invalid SVG string.",
        "aliases": [
            "CVE-2021-29059"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "2.1.0"
                    },
                    {
                        "fixed": "4.3.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "json5",
        "version": "2.1.3",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "The `parse` method of the JSON5 library before and including version `2.2.1` does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object.\n\nThis vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.\n\n## Impact\nThis vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.\n\n## Mitigation\nThis vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.\n\n## Details\n \nSuppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using `JSON5.parse`, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:\n \n```js\nconst JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) => {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) => {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) => {\n    if (searchKeys.indexOf(key) > -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n  throw new Error('Forbidden...');\n}\n```\n \nIf the user attempts to set the `isAdmin` key, their request will be rejected:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden...\n}\n```\n \nHowever, users can instead set the `__proto__` key to `{\"isAdmin\": true}`. `JSON5` will parse this key and will set the `isAdmin` key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n  throw new Error('Forbidden...');\n}\n ```",
        "aliases": [
            "CVE-2022-46175"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "2.0.0"
                    },
                    {
                        "fixed": "2.2.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "loader-utils",
        "version": "1.4.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.",
        "aliases": [
            "CVE-2022-37601"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "2.0.0"
                    },
                    {
                        "fixed": "2.0.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "loader-utils",
        "version": "1.4.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "A Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the url variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.",
        "aliases": [
            "CVE-2022-37603"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.0.0"
                    },
                    {
                        "fixed": "1.4.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "loader-utils",
        "version": "1.4.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "A regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils via the resourcePath variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.",
        "aliases": [
            "CVE-2022-37599"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "1.0.0"
                    },
                    {
                        "fixed": "1.4.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.15",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.",
        "aliases": [
            "CVE-2020-8203"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.20"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.15",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(\"time_cost2: \" + time_cost2)",
        "aliases": [
            "CVE-2020-28500"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.21"
                    }
                ]
            }
        ]
    },
    {
        "name": "lodash",
        "version": "4.17.15",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.",
        "aliases": [
            "CVE-2021-23337"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.21"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimatch",
        "version": "3.0.4",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
        "aliases": [
            "CVE-2022-3517"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.0.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "minimist",
        "version": "1.2.5",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "Minimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",
        "aliases": [
            "CVE-2021-44906"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.2.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "node-forge",
        "version": "0.9.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "The package node-forge before 0.10.0 is vulnerable to Prototype Pollution via the util.setPath function. Note: version 0.10.0 is a breaking change removing the vulnerable functions.",
        "aliases": [
            "CVE-2020-7720"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.10.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "node-forge",
        "version": "0.9.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "### Impact\n`forge.util.setPath` had a potential prototype pollution issue if called with untrusted keys. This API was not used by forge itself.\n\n### Patches\nThe `forge.util.setPath` API and related functions were removed in 0.10.0.\n\n### Workarounds\nDon't call `forge.util.setPath` directly or indirectly with untrusted keys.\n\n### References\n- https://security.snyk.io/vuln/SNYK-JS-NODEFORGE-598677\n- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7720\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge).\n* Email us at support@digitalbazaar.com.",
        "aliases": null,
        "severity": null,
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.10.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "node-forge",
        "version": "0.9.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "### Impact\nThe `forge.debug` API had a potential prototype pollution issue if called with untrusted input. The API was only used for internal debug purposes in a safe way and never documented or advertised.  It is suspected that uses of this API, if any exist, would likely not have used untrusted inputs in a vulnerable way.\n\n### Patches\nThe `forge.debug` API and related functions were removed in 1.0.0.\n\n### Workarounds\nDon't use the `forge.debug` API directly or indirectly with untrusted input.\n\n### References\n- https://www.huntr.dev/bounties/1-npm-node-forge/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge).\n* Email us at support@digitalbazaar.com.",
        "aliases": null,
        "severity": null,
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.0.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "node-forge",
        "version": "0.9.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "parseUrl functionality in node-forge mishandles certain uses of backslash such as https:/\\/\\/\\ and interprets the URI as a relative path. ",
        "aliases": [
            "CVE-2022-0122"
        ],
        "severity": null,
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.0.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "node-forge",
        "version": "0.9.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "### Impact\nThe regex used for the `forge.util.parseUrl` API would not properly parse certain inputs resulting in a parsed data structure that could lead to undesired behavior.\n\n### Patches\n`forge.util.parseUrl` and other very old related URL APIs were removed in 1.0.0 in favor of letting applications use the more modern WHATWG URL Standard API.\n\n### Workarounds\nEnsure code does not directly or indirectly call `forge.util.parseUrl` with untrusted input.\n\n### References\n- https://www.huntr.dev/bounties/41852c50-3c6d-4703-8c55-4db27164a4ae/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at support@digitalbazaar.com\n",
        "aliases": null,
        "severity": null,
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.0.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "node-forge",
        "version": "0.9.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "### Impact\n\nRSA PKCS#1 v1.5 signature verification code is not properly checking `DigestInfo` for a proper ASN.1 structure. This can lead to successful verification with signatures that contain invalid structures but a valid digest.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)",
        "aliases": [
            "CVE-2022-24773"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.3.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "node-forge",
        "version": "0.9.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "### Impact\n\nRSA PKCS#1 v1.5 signature verification code is lenient in checking the digest algorithm structure. This can allow a crafted structure that steals padding bytes and uses unchecked portion of the PKCS#1 encoded message to forge a signature when a low public exponent is being used.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### References\n\nFor more information, please see\n[\"Bleichenbacher's RSA signature forgery based on implementation error\"](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/)\nby Hal Finney.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)",
        "aliases": [
            "CVE-2022-24771"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.3.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "node-forge",
        "version": "0.9.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "### Impact\n\nRSA PKCS#1 v1.5 signature verification code does not check for tailing garbage bytes after decoding a `DigestInfo` ASN.1 structure. This can allow padding bytes to be removed and garbage data added to forge a signature when a low public exponent is being used.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### References\n\nFor more information, please see\n[\"Bleichenbacher's RSA signature forgery based on implementation error\"](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/)\nby Hal Finney.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)",
        "aliases": [
            "CVE-2022-24772"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.3.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "node-notifier",
        "version": "5.4.3",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "This affects the package node-notifier before 8.0.1. It allows an attacker to run arbitrary commands on Linux machines due to the options params not being sanitised when being passed an array.",
        "aliases": [
            "CVE-2020-7789"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "8.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "nth-check",
        "version": "1.0.2",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "nth-check is vulnerable to Inefficient Regular Expression Complexity",
        "aliases": [
            "CVE-2021-3803"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "2.0.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "object-path",
        "version": "0.9.2",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "### Impact\nA prototype pollution vulnerability has been found in `object-path` <= 0.11.4 affecting the `set()` method. The vulnerability is limited to the `includeInheritedProps` mode (if version >= 0.11.0 is used), which has to be explicitly enabled by creating a new instance of `object-path` and setting the option `includeInheritedProps: true`, or by using the default `withInheritedProps` instance. The default operating mode is not affected by the vulnerability if version >= 0.11.0 is used. Any usage of `set()` in versions < 0.11.0 is vulnerable.\n \n### Patches\nUpgrade to version >= 0.11.5\n\n### Workarounds\nDon't use the `includeInheritedProps: true` options or the `withInheritedProps` instance if using a version >= 0.11.0.\n\n### References\n[Read more about the prototype pollution vulnerability](https://codeburst.io/what-is-prototype-pollution-49482fc4b638)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [object-path](https://github.com/mariocasciaro/object-path)",
        "aliases": [
            "CVE-2020-15256"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:H/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.11.5"
                    }
                ]
            }
        ]
    },
    {
        "name": "object-path",
        "version": "0.9.2",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "This affects the package object-path before 0.11.6. A type confusion vulnerability can lead to a bypass of CVE-2020-15256 when the path components used in the path parameter are arrays. In particular, the condition currentPath === '__proto__' returns false if currentPath is ['__proto__']. This is because the === operator returns always false when the type of the operands is different.",
        "aliases": [
            "CVE-2021-23434"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.11.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "object-path",
        "version": "0.9.2",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "object-path is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution'). The `del()` function fails to validate which Object properties it deletes. This allows attackers to modify the prototype of Object, causing the modification of default properties like `toString` on all objects.",
        "aliases": [
            "CVE-2021-3805"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "0.11.8"
                    }
                ]
            }
        ]
    },
    {
        "name": "path-parse",
        "version": "1.0.6",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "Affected versions of npm package `path-parse` are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.",
        "aliases": [
            "CVE-2021-23343"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.0.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "postcss",
        "version": "7.0.32",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "The package postcss versions before 7.0.36 or between 8.0.0 and 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \\/\\*\\s* sourceMappingURL=(.*).",
        "aliases": [
            "CVE-2021-23382"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "8.0.0"
                    },
                    {
                        "fixed": "8.2.13"
                    }
                ]
            }
        ]
    },
    {
        "name": "postcss",
        "version": "7.0.32",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "The npm package `postcss` from 7.0.0 and before versions 7.0.36 and 8.2.10 is vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.",
        "aliases": [
            "CVE-2021-23368"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "7.0.0"
                    },
                    {
                        "fixed": "7.0.36"
                    }
                ]
            }
        ]
    },
    {
        "name": "qs",
        "version": "6.7.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).",
        "aliases": [
            "CVE-2022-24999"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.17.3"
                    }
                ]
            }
        ]
    },
    {
        "name": "ssri",
        "version": "7.1.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "npm `ssri` 5.2.2-6.0.1 and 7.0.0-8.0.0, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.",
        "aliases": [
            "CVE-2021-27290"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "5.2.2"
                    },
                    {
                        "fixed": "6.0.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "terser",
        "version": "3.17.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "The package terser before 4.8.1, from 5.0.0 and before 5.14.2 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure usage of regular expressions.",
        "aliases": [
            "CVE-2022-25858"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "4.8.1"
                    }
                ]
            }
        ]
    },
    {
        "name": "url-parse",
        "version": "1.4.7",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "url-parse before 1.5.0 mishandles certain uses of backslash such as http:\\/ and interprets the URI as a relative path.",
        "aliases": [
            "CVE-2021-27515"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.5.0"
                    }
                ]
            }
        ]
    },
    {
        "name": "url-parse",
        "version": "1.4.7",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "# Overview\n\nAffected versions of npm `url-parse` are vulnerable to URL Redirection to Untrusted Site.\n\n# Impact\n\nDepending on library usage and attacker intent, impacts may include allow/block list bypasses, SSRF attacks, open redirects, or other undesired behavior.",
        "aliases": [
            "CVE-2021-3664"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.5.2"
                    }
                ]
            }
        ]
    },
    {
        "name": "url-parse",
        "version": "1.4.7",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "Authorization Bypass Through User-Controlled Key in NPM url-parse prior to 1.5.6.",
        "aliases": [
            "CVE-2022-0512"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.5.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "url-parse",
        "version": "1.4.7",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "A specially crafted URL with an '@' sign but empty user info and no hostname, when parsed with url-parse, url-parse will return the incorrect href. In particular,\n`````\nparse(\\\"http://@/127.0.0.1\\\")\n`````\nWill return:\n`````\n{\n slashes: true,\n protocol: 'http:',\n hash: '',\n query: '',\n pathname: '/127.0.0.1',\n auth: '',\n host: '',\n port: '',\n hostname: '',\n password: '',\n username: '',\n origin: 'null',\n href: 'http:///127.0.0.1'\n }\n`````\nIf the 'hostname' or 'origin' attributes of the output from url-parse are used in security decisions and the final 'href' attribute of the output is then used to make a request, the decision may be incorrect.\n",
        "aliases": [
            "CVE-2022-0639"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.5.7"
                    }
                ]
            }
        ]
    },
    {
        "name": "url-parse",
        "version": "1.4.7",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "url-parse prior to version 1.5.8 is vulnerable to Authorization Bypass Through User-Controlled Key.",
        "aliases": [
            "CVE-2022-0686"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.5.8"
                    }
                ]
            }
        ]
    },
    {
        "name": "url-parse",
        "version": "1.4.7",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "Leading control characters in a URL are not stripped when passed into url-parse. This can cause input URLs to be mistakenly be interpreted as a relative URL without a hostname and protocol, while the WHATWG URL parser will trim control characters and treat it as an absolute URL.\n\nIf url-parse is used in security decisions involving the hostname / protocol, and the input URL is used in a client which uses the WHATWG URL parser, the decision may be incorrect.\n\nThis can also lead to a cross-site scripting (XSS) vulnerability if url-parse is used to check for the javascript: protocol in URLs. See following example:\n`````\nconst parse = require('url-parse')\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\nurl = parse(\\\"\\\\bjavascript:alert(1)\\\")\n\nconsole.log(url)\n\napp.get('/', (req, res) => {\n if (url.protocol !== \\\"javascript:\\\") {res.send(\\\"<a href=\\\\'\\\" + url.href + \\\"\\\\'>CLICK ME!</a>\\\")}\n })\n\napp.listen(port, () => {\n console.log(`Example app listening on port ${port}`)\n })\n`````",
        "aliases": [
            "CVE-2022-0691"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "1.5.9"
                    }
                ]
            }
        ]
    },
    {
        "name": "ws",
        "version": "6.2.1",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "### Impact\n\nA specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server.\n\n### Proof of concept\n\n```js\nfor (const length of [1000, 2000, 4000, 8000, 16000, 32000]) {\n  const value = 'b' + ' '.repeat(length) + 'x';\n  const start = process.hrtime.bigint();\n\n  value.trim().split(/ *, */);\n\n  const end = process.hrtime.bigint();\n\n  console.log('length = %d, time = %f ns', length, end - start);\n}\n```\n\n### Patches\n\nThe vulnerability was fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff) and backported to ws@6.2.2 (https://github.com/websockets/ws/commit/78c676d2a1acefbc05292e9f7ea0a9457704bf1b) and ws@5.2.3 (https://github.com/websockets/ws/commit/76d47c1479002022a3e4357b3c9f0e23a68d4cd2).\n\n### Workarounds\n\nIn vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options.\n\n### Credits\n\nThe vulnerability was responsibly disclosed along with a fix in private by [Robert McLaughlin](https://github.com/robmcl4) from University of California, Santa Barbara.\n",
        "aliases": [
            "CVE-2021-32640"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "7.0.0"
                    },
                    {
                        "fixed": "7.4.6"
                    }
                ]
            }
        ]
    },
    {
        "name": "y18n",
        "version": "4.0.0",
        "ecosystem": "npm",
        "fileLocation": "/home/adinatha/Documents/Programming/tugas-akhir/coeus/src/testcase/dependency/package-lock.json",
        "details": "### Overview\n\nThe npm package `y18n` before versions 3.2.2, 4.0.1, and 5.0.5 is vulnerable to Prototype Pollution. \n\n### POC\n\n```\nconst y18n = require('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({polluted: true});\n\nconsole.log(polluted); // true\n```\n\n### Recommendation\n\nUpgrade to version 3.2.2, 4.0.1, 5.0.5 or later.",
        "aliases": [
            "CVE-2020-7774"
        ],
        "severity": [
            {
                "type": "CVSS_V3",
                "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
            }
        ],
        "fixed": [
            {
                "type": "SEMVER",
                "events": [
                    {
                        "introduced": "0"
                    },
                    {
                        "fixed": "3.2.2"
                    }
                ]
            }
        ]
    }
]